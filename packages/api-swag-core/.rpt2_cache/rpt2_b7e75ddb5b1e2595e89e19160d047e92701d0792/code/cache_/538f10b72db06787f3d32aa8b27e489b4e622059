{"map":"{\"version\":3,\"file\":\"formTemplateController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/formTemplateController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IA4EA,CAAC;IA1EC;;;OAGG;IACI,uCAAM,GAAZ,UAAc,iBAAoC;;;;;4BACP,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,6BAA6B;4BAClC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,iBAAiB;yBACxB,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,0CAAS,GAAf,UAAiB,IAAY;;;;;4BAC2B,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC9E,GAAG,EAAE,gCAAgC;4BACrC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;yBACjB,CAAC,EAAA;;wBAJI,MAAM,GAA2C,SAIrD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,iDAAgB,GAAtB,UAAwB,UAAkB;;;;;4BACkB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAClF,GAAG,EAAE,uCAAuC;4BAC5C,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,UAAU,YAAA,EAAE;yBACvB,CAAC,EAAA;;wBAJI,MAAM,GAA+C,SAIzD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,uCAAM,GAAZ,UAAc,EAAU;;;;;4BACmB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,6BAA6B;4BAClC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,EAAE,IAAA,EAAE;yBACf,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,uCAAM,GAAZ,UAAc,iBAAoC;;;;;4BACP,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,6BAA6B;4BAClC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,iBAAiB;yBACxB,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,6BAAC;AAAD,CAAC,AA5ED,IA4EC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * form-template-controller\r\n */\r\nvar FormTemplateController = /** @class */ (function () {\r\n    function FormTemplateController() {\r\n    }\r\n    /**\r\n     * 修改模板\r\n     * @param bizFormTemplateVo - BizFormTemplateVo - body - bizFormTemplateVo - 必填\r\n     */\r\n    FormTemplateController.prototype.update = function (bizFormTemplateVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/form/template/update',\r\n                            method: 'post',\r\n                            data: bizFormTemplateVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取模板详情\r\n     * @param code - string - query - 模板编码 - 必填\r\n     */\r\n    FormTemplateController.prototype.getByCode = function (code) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/form/template/getByCode',\r\n                            method: 'get',\r\n                            params: { code: code },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据模型编码查询模板列表\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    FormTemplateController.prototype.findBySchemaCode = function (schemaCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/form/template/findBySchemaCode',\r\n                            method: 'get',\r\n                            params: { schemaCode: schemaCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 模板删除\r\n     * @param id - string - query - id - 必填\r\n     */\r\n    FormTemplateController.prototype.delete = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/form/template/delete',\r\n                            method: 'get',\r\n                            params: { id: id },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 新建模板\r\n     * @param bizFormTemplateVo - BizFormTemplateVo - body - bizFormTemplateVo - 必填\r\n     */\r\n    FormTemplateController.prototype.create = function (bizFormTemplateVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/form/template/create',\r\n                            method: 'post',\r\n                            data: bizFormTemplateVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return FormTemplateController;\r\n}());\r\nexport { FormTemplateController };\r\n//# sourceMappingURL=formTemplateController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/formTemplateController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { BizFormTemplateVo, ResBodyVoid, ResBodyListBizFormTemplateVo, ResBodyBizFormTemplateVo } from '../model';\r\n/**\r\n * form-template-controller\r\n */\r\nexport declare class FormTemplateController {\r\n    /**\r\n     * 修改模板\r\n     * @param bizFormTemplateVo - BizFormTemplateVo - body - bizFormTemplateVo - 必填\r\n     */\r\n    update(bizFormTemplateVo: BizFormTemplateVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 获取模板详情\r\n     * @param code - string - query - 模板编码 - 必填\r\n     */\r\n    getByCode(code: string): Promise<AxiosResponse<ResBodyBizFormTemplateVo, any>>;\r\n    /**\r\n     * 根据模型编码查询模板列表\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    findBySchemaCode(schemaCode: string): Promise<AxiosResponse<ResBodyListBizFormTemplateVo, any>>;\r\n    /**\r\n     * 模板删除\r\n     * @param id - string - query - id - 必填\r\n     */\r\n    delete(id: string): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 新建模板\r\n     * @param bizFormTemplateVo - BizFormTemplateVo - body - bizFormTemplateVo - 必填\r\n     */\r\n    create(bizFormTemplateVo: BizFormTemplateVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n}\r\n"}}
