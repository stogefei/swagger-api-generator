{"map":"{\"version\":3,\"file\":\"appController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/appController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IAsGA,CAAC;IApGC;;;OAGG;IACI,qCAAa,GAAnB,UAAqB,OAAe;;;;;4BACkB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC5E,GAAG,EAAE,2BAA2B;4BAChC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,OAAO,SAAA,EAAE;yBACpB,CAAC,EAAA;;wBAJI,MAAM,GAAyC,SAInD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,mCAAW,GAAjB;;;;;4BACoD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC1E,GAAG,EAAE,yBAAyB;4BAC9B,MAAM,EAAE,MAAM;yBACf,CAAC,EAAA;;wBAHI,MAAM,GAAuC,SAGjD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,4BAAI,GAAV;;;;;4BACuD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC7E,GAAG,EAAE,kBAAkB;4BACvB,MAAM,EAAE,MAAM;yBACf,CAAC,EAAA;;wBAHI,MAAM,GAA0C,SAGpD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,4BAAI,GAAV,UAAY,OAAe;;;;;4BACwB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACzE,GAAG,EAAE,kBAAkB;4BACvB,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,OAAO,SAAA,EAAE;yBACpB,CAAC,EAAA;;wBAJI,MAAM,GAAsC,SAIhD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,qCAAa,GAAnB,UAAqB,UAAkB;;;;;4BACW,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACxE,GAAG,EAAE,2BAA2B;4BAChC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,UAAU,YAAA,EAAE;yBACvB,CAAC,EAAA;;wBAJI,MAAM,GAAqC,SAI/C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,mCAAW,GAAjB,UAAmB,QAAgB;;;;;4BACa,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACtE,GAAG,EAAE,yBAAyB;4BAC9B,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,QAAQ,UAAA,EAAE;yBACrB,CAAC,EAAA;;wBAJI,MAAM,GAAmC,SAI7C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,wCAAgB,GAAtB,UAAwB,IAAY;;;;;4BACc,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACxE,GAAG,EAAE,8BAA8B;4BACnC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;yBACjB,CAAC,EAAA;;wBAJI,MAAM,GAAqC,SAI/C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,oBAAC;AAAD,CAAC,AAtGD,IAsGC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * app-controller\r\n */\r\nvar AppController = /** @class */ (function () {\r\n    function AppController() {\r\n    }\r\n    /**\r\n     * 搜索模型\r\n     * @param keyword - string - query - 关键字 - 必填\r\n     */\r\n    AppController.prototype.searchSchemas = function (keyword) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/searchSchemas',\r\n                            method: 'get',\r\n                            params: { keyword: keyword },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 分组方式获取启用的应用列表\r\n     */\r\n    AppController.prototype.listGroupBy = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/listGroupBy',\r\n                            method: 'post',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取启用的应用列表\r\n     */\r\n    AppController.prototype.list = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/list',\r\n                            method: 'post',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取应用详情\r\n     * @param appCode - string - query - 应用编码 - 必填\r\n     */\r\n    AppController.prototype.info = function (appCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/info',\r\n                            method: 'get',\r\n                            params: { appCode: appCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取模型详情\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    AppController.prototype.getSchemaInfo = function (schemaCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/getSchemaInfo',\r\n                            method: 'get',\r\n                            params: { schemaCode: schemaCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取自定义菜单详情\r\n     * @param menuCode - string - query - 菜单编码 - 必填\r\n     */\r\n    AppController.prototype.getMenuInfo = function (menuCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/getMenuInfo',\r\n                            method: 'get',\r\n                            params: { menuCode: menuCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取仪表盘详情\r\n     * @param code - string - query - 仪表盘编码 - 必填\r\n     */\r\n    AppController.prototype.getDashboardInfo = function (code) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/app/getDashboardInfo',\r\n                            method: 'get',\r\n                            params: { code: code },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AppController;\r\n}());\r\nexport { AppController };\r\n//# sourceMappingURL=appController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/appController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { ResBodyDashboardVo, ResBodyBizMenuVo, ResBodyBizSchemaVo, ResBodyAppPackageVo, ResBodyListAppPackageVo, ResBodyListFunTreeVo, ResBodyListBizSchemaVo } from '../model';\r\n/**\r\n * app-controller\r\n */\r\nexport declare class AppController {\r\n    /**\r\n     * 搜索模型\r\n     * @param keyword - string - query - 关键字 - 必填\r\n     */\r\n    searchSchemas(keyword: string): Promise<AxiosResponse<ResBodyListBizSchemaVo, any>>;\r\n    /**\r\n     * 分组方式获取启用的应用列表\r\n     */\r\n    listGroupBy(): Promise<AxiosResponse<ResBodyListFunTreeVo, any>>;\r\n    /**\r\n     * 获取启用的应用列表\r\n     */\r\n    list(): Promise<AxiosResponse<ResBodyListAppPackageVo, any>>;\r\n    /**\r\n     * 获取应用详情\r\n     * @param appCode - string - query - 应用编码 - 必填\r\n     */\r\n    info(appCode: string): Promise<AxiosResponse<ResBodyAppPackageVo, any>>;\r\n    /**\r\n     * 获取模型详情\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    getSchemaInfo(schemaCode: string): Promise<AxiosResponse<ResBodyBizSchemaVo, any>>;\r\n    /**\r\n     * 获取自定义菜单详情\r\n     * @param menuCode - string - query - 菜单编码 - 必填\r\n     */\r\n    getMenuInfo(menuCode: string): Promise<AxiosResponse<ResBodyBizMenuVo, any>>;\r\n    /**\r\n     * 获取仪表盘详情\r\n     * @param code - string - query - 仪表盘编码 - 必填\r\n     */\r\n    getDashboardInfo(code: string): Promise<AxiosResponse<ResBodyDashboardVo, any>>;\r\n}\r\n"}}
