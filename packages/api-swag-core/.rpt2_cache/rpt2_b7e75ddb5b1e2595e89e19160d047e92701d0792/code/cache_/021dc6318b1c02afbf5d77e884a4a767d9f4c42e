{"map":"{\"version\":3,\"file\":\"organizationController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/organizationController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IAwGA,CAAC;IAtGC;;;OAGG;IACI,yCAAQ,GAAd,UAAgB,SAAoB;;;;;4BACS,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,4BAA4B;4BACjC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,SAAS;yBAChB,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,qCAAI,GAAV,UAAY,cAA8B;;;;;4BACC,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,wBAAwB;4BAC7B,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,cAAc;yBACrB,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,uCAAM,GAAZ,UAAc,MAAqB;;;;;4BACQ,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,0BAA0B;4BAC/B,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,MAAM;yBACb,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,uCAAM,GAAZ,UAAc,WAAiC;;;;;4BACa,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAClF,GAAG,EAAE,gCAAgC;4BACrC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,WAAW;yBAClB,CAAC,EAAA;;wBAJI,MAAM,GAA+C,SAIzD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,wCAAO,GAAb;;;;;4BACyD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC/E,GAAG,EAAE,2BAA2B;4BAChC,MAAM,EAAE,KAAK;yBACd,CAAC,EAAA;;wBAHI,MAAM,GAA4C,SAGtD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,oCAAG,GAAT,UAAW,KAAa;;;;;4BAC6B,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC3E,GAAG,EAAE,uBAAuB;4BAC5B,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,KAAK,OAAA,EAAE;yBAClB,CAAC,EAAA;;wBAJI,MAAM,GAAwC,SAIlD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,8CAAa,GAAnB,UAAqB,MAAc;;;;;4BACU,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,iCAAiC;4BACtC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,MAAM,QAAA,EAAE;yBACnB,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,6BAAC;AAAD,CAAC,AAxGD,IAwGC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * organization-controller\r\n */\r\nvar OrganizationController = /** @class */ (function () {\r\n    function OrganizationController() {\r\n    }\r\n    /**\r\n     * 同步组织\r\n     * @param syncOrgVo - SyncOrgVo - body - syncOrgVo - 必填\r\n     */\r\n    OrganizationController.prototype.syncOrgs = function (syncOrgVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/syncOrgs',\r\n                            method: 'post',\r\n                            data: syncOrgVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 保存组织\r\n     * @param organizationVo - OrganizationVo - body - organizationVo - 必填\r\n     */\r\n    OrganizationController.prototype.save = function (organizationVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/save',\r\n                            method: 'post',\r\n                            data: organizationVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除组织\r\n     * @param orgIds - Array<string> - body - orgIds - 必填\r\n     */\r\n    OrganizationController.prototype.remove = function (orgIds) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/remove',\r\n                            method: 'post',\r\n                            data: orgIds,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 组织同步记录查询\r\n     * @param queryParams - OrgSyncRecordQueryVo - body - queryParams - 必填\r\n     */\r\n    OrganizationController.prototype.record = function (queryParams) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/query/record',\r\n                            method: 'post',\r\n                            data: queryParams,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取组织列表\r\n     */\r\n    OrganizationController.prototype.getList = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/getList',\r\n                            method: 'get',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取组织详情\r\n     * @param orgId - string - query - 组织id - 必填\r\n     */\r\n    OrganizationController.prototype.get = function (orgId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/get',\r\n                            method: 'get',\r\n                            params: { orgId: orgId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 组织同步结果获取\r\n     * @param taskId - string - query - taskId - 必填\r\n     */\r\n    OrganizationController.prototype.genSyncResult = function (taskId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/config/genSyncResult',\r\n                            method: 'get',\r\n                            params: { taskId: taskId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return OrganizationController;\r\n}());\r\nexport { OrganizationController };\r\n//# sourceMappingURL=organizationController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/organizationController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { ResBodystring, ResBodyOrganizationVo, ResBodyListOrganizationVo, OrgSyncRecordQueryVo, ResBodyPageVOOrgSyncRecordVo, ResBodyVoid, OrganizationVo, SyncOrgVo } from '../model';\r\n/**\r\n * organization-controller\r\n */\r\nexport declare class OrganizationController {\r\n    /**\r\n     * 同步组织\r\n     * @param syncOrgVo - SyncOrgVo - body - syncOrgVo - 必填\r\n     */\r\n    syncOrgs(syncOrgVo: SyncOrgVo): Promise<AxiosResponse<ResBodystring, any>>;\r\n    /**\r\n     * 保存组织\r\n     * @param organizationVo - OrganizationVo - body - organizationVo - 必填\r\n     */\r\n    save(organizationVo: OrganizationVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 删除组织\r\n     * @param orgIds - Array<string> - body - orgIds - 必填\r\n     */\r\n    remove(orgIds: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 组织同步记录查询\r\n     * @param queryParams - OrgSyncRecordQueryVo - body - queryParams - 必填\r\n     */\r\n    record(queryParams: OrgSyncRecordQueryVo): Promise<AxiosResponse<ResBodyPageVOOrgSyncRecordVo, any>>;\r\n    /**\r\n     * 获取组织列表\r\n     */\r\n    getList(): Promise<AxiosResponse<ResBodyListOrganizationVo, any>>;\r\n    /**\r\n     * 获取组织详情\r\n     * @param orgId - string - query - 组织id - 必填\r\n     */\r\n    get(orgId: string): Promise<AxiosResponse<ResBodyOrganizationVo, any>>;\r\n    /**\r\n     * 组织同步结果获取\r\n     * @param taskId - string - query - taskId - 必填\r\n     */\r\n    genSyncResult(taskId: string): Promise<AxiosResponse<ResBodystring, any>>;\r\n}\r\n"}}
