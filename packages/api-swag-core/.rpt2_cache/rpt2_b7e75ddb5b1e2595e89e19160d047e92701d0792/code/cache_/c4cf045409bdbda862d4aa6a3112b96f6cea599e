{"map":"{\"version\":3,\"file\":\"userController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/userController.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * user-controller\r\n */\r\nvar UserController = /** @class */ (function () {\r\n    function UserController() {\r\n    }\r\n    /**\r\n     * 修改用户备注\r\n     * @param updateUserRemarkVo - UpdateUserRemarkVo - body - updateUserRemarkVo - 必填\r\n     */\r\n    UserController.prototype.updateQuitRemark = function (updateUserRemarkVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/updateQuitRemark',\r\n                            method: 'post',\r\n                            data: updateUserRemarkVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 保存用户\r\n     * @param userVo - UserVo - body - userVO - 必填\r\n     */\r\n    UserController.prototype.save = function (userVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/save',\r\n                            method: 'post',\r\n                            data: userVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量恢复用户\r\n     * @param deptUserIdsVo - DeptUserIdsVO - body - deptUserIdsVO - 必填\r\n     */\r\n    UserController.prototype.restore = function (deptUserIdsVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/restore',\r\n                            method: 'post',\r\n                            data: deptUserIdsVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 重置用户密码\r\n     * @param resetUserPwdVo - ResetUserPwdVo - body - resetUserPwdVo - 必填\r\n     */\r\n    UserController.prototype.resetPwd = function (resetUserPwdVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/resetPwd',\r\n                            method: 'post',\r\n                            data: resetUserPwdVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取离职用户列表\r\n     * @param pageNum - number - query - 开始页数 - 必填\r\n     * @param pageSize - number - query - 每页显示数量 - 必填\r\n     * @param keyword - string - query - 关键字 - 可空\r\n     */\r\n    UserController.prototype.listQuitUsers = function (pageNum, pageSize, keyword) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/listQuitUsers',\r\n                            method: 'get',\r\n                            params: { keyword: keyword, pageNum: pageNum, pageSize: pageSize },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取用户详情\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    UserController.prototype.get = function (userId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/get',\r\n                            method: 'get',\r\n                            params: { userId: userId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量禁用用户\r\n     * @param userIds - Array<string> - body - userIds - 必填\r\n     */\r\n    UserController.prototype.disable = function (userIds) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/disable',\r\n                            method: 'post',\r\n                            data: userIds,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除用户\r\n     * @param deptUserIdsVo - DeptUserIdsVO - body - deptUserIdsVO - 必填\r\n     */\r\n    UserController.prototype.delete = function (deptUserIdsVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/delete',\r\n                            method: 'post',\r\n                            data: deptUserIdsVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量保存用户\r\n     * @param userVoList - Array<UserVo> - body - userVoList - 必填\r\n     */\r\n    UserController.prototype.batchSave = function (userVoList) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/batchSave',\r\n                            method: 'post',\r\n                            data: userVoList,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量转换用户部门\r\n     * @param batchMoveUserDeptVo - BatchMoveUserDeptVo - body - batchMoveUserDeptVo - 必填\r\n     */\r\n    UserController.prototype.batchMoveUserDept = function (batchMoveUserDeptVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/user/batchMoveUserDept',\r\n                            method: 'post',\r\n                            data: batchMoveUserDeptVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return UserController;\r\n}());\r\nexport { UserController };\r\n//# sourceMappingURL=userController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/userController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { BatchMoveUserDeptVo, ResBodyVoid, UserVo, ResBodyListUserVo, DeptUserIdsVO, ResBodyUserVo, ResBodyPageVOUserVo, ResetUserPwdVo, UpdateUserRemarkVo } from '../model';\r\n/**\r\n * user-controller\r\n */\r\nexport declare class UserController {\r\n    /**\r\n     * 修改用户备注\r\n     * @param updateUserRemarkVo - UpdateUserRemarkVo - body - updateUserRemarkVo - 必填\r\n     */\r\n    updateQuitRemark(updateUserRemarkVo: UpdateUserRemarkVo): Promise<AxiosResponse<ResBodyUserVo, any>>;\r\n    /**\r\n     * 保存用户\r\n     * @param userVo - UserVo - body - userVO - 必填\r\n     */\r\n    save(userVo: UserVo): Promise<AxiosResponse<ResBodyUserVo, any>>;\r\n    /**\r\n     * 批量恢复用户\r\n     * @param deptUserIdsVo - DeptUserIdsVO - body - deptUserIdsVO - 必填\r\n     */\r\n    restore(deptUserIdsVo: DeptUserIdsVO): Promise<AxiosResponse<ResBodyListUserVo, any>>;\r\n    /**\r\n     * 重置用户密码\r\n     * @param resetUserPwdVo - ResetUserPwdVo - body - resetUserPwdVo - 必填\r\n     */\r\n    resetPwd(resetUserPwdVo: ResetUserPwdVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 获取离职用户列表\r\n     * @param pageNum - number - query - 开始页数 - 必填\r\n     * @param pageSize - number - query - 每页显示数量 - 必填\r\n     * @param keyword - string - query - 关键字 - 可空\r\n     */\r\n    listQuitUsers(pageNum: number, pageSize: number, keyword?: string): Promise<AxiosResponse<ResBodyPageVOUserVo, any>>;\r\n    /**\r\n     * 获取用户详情\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    get(userId: string): Promise<AxiosResponse<ResBodyUserVo, any>>;\r\n    /**\r\n     * 批量禁用用户\r\n     * @param userIds - Array<string> - body - userIds - 必填\r\n     */\r\n    disable(userIds: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 删除用户\r\n     * @param deptUserIdsVo - DeptUserIdsVO - body - deptUserIdsVO - 必填\r\n     */\r\n    delete(deptUserIdsVo: DeptUserIdsVO): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 批量保存用户\r\n     * @param userVoList - Array<UserVo> - body - userVoList - 必填\r\n     */\r\n    batchSave(userVoList: Array<UserVo>): Promise<AxiosResponse<ResBodyListUserVo, any>>;\r\n    /**\r\n     * 批量转换用户部门\r\n     * @param batchMoveUserDeptVo - BatchMoveUserDeptVo - body - batchMoveUserDeptVo - 必填\r\n     */\r\n    batchMoveUserDept(batchMoveUserDeptVo: BatchMoveUserDeptVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n}\r\n"}}
