{"map":"{\"version\":3,\"file\":\"portalUnitController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/portalUnitController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IAyFA,CAAC;IAvFC;;;OAGG;IACI,wCAAS,GAAf,UAAiB,gBAAkC;;;;;4BACR,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,wBAAwB;4BAC7B,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,gBAAgB;yBACvB,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,2CAAY,GAAlB,UAAoB,IAAU;;;;;4BACa,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,2BAA2B;4BAChC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,IAAI;yBACX,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,iDAAkB,GAAxB,UAA0B,MAAc;;;;;4BACgB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC9E,GAAG,EAAE,iCAAiC;4BACtC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,MAAM,QAAA,EAAE;yBACnB,CAAC,EAAA;;wBAJI,MAAM,GAA2C,SAIrD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,0CAAW,GAAjB,UAAmB,MAAc;;;;;4BACY,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,0BAA0B;4BAC/B,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,MAAM,QAAA,EAAE;yBACnB,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,6CAAc,GAApB;;;;;4BAC6C,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,6BAA6B;4BAClC,MAAM,EAAE,KAAK;yBACd,CAAC,EAAA;;wBAHI,MAAM,GAAgC,SAG1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,4CAAa,GAAnB,UAAqB,oBAA0C;;;;;4BACjB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACpE,GAAG,EAAE,4BAA4B;4BACjC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,oBAAoB;yBAC3B,CAAC,EAAA;;wBAJI,MAAM,GAAiC,SAI3C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,2BAAC;AAAD,CAAC,AAzFD,IAyFC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * portal-unit-controller\r\n */\r\nvar PortalUnitController = /** @class */ (function () {\r\n    function PortalUnitController() {\r\n    }\r\n    /**\r\n     * 修改密码\r\n     * @param updatePasswordVo - UpdatePasswordVo - body - updatePasswordVo - 必填\r\n     */\r\n    PortalUnitController.prototype.updatePwd = function (updatePasswordVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/unit/updatePwd',\r\n                            method: 'post',\r\n                            data: updatePasswordVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 修改当前登陆用户头像\r\n     * @param idVo - IDVo - body - idVo - 必填\r\n     */\r\n    PortalUnitController.prototype.updateAvatar = function (idVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/unit/updateAvatar',\r\n                            method: 'post',\r\n                            data: idVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 查询用户映射信息\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    PortalUnitController.prototype.getUserMappingInfo = function (userId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/unit/getUserMappingInfo',\r\n                            method: 'get',\r\n                            params: { userId: userId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取用户信息\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    PortalUnitController.prototype.getUserInfo = function (userId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/unit/getUserInfo',\r\n                            method: 'get',\r\n                            params: { userId: userId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取当前登陆用户信息\r\n     */\r\n    PortalUnitController.prototype.getCurUserInfo = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/unit/getCurUserInfo',\r\n                            method: 'get',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 组织属于、拥有校验\r\n     * @param orgAscriptionCheckVo - OrgAscriptionCheckVo - body - orgAscriptionCheckVo - 必填\r\n     */\r\n    PortalUnitController.prototype.belongToCheck = function (orgAscriptionCheckVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/portal/unit/belongToCheck',\r\n                            method: 'post',\r\n                            data: orgAscriptionCheckVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PortalUnitController;\r\n}());\r\nexport { PortalUnitController };\r\n//# sourceMappingURL=portalUnitController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/portalUnitController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { OrgAscriptionCheckVo, ResBodyboolean, ResBodyUserVo, ResBodyUserMappingInfoVo, IDVo, ResBodyVoid, UpdatePasswordVo } from '../model';\r\n/**\r\n * portal-unit-controller\r\n */\r\nexport declare class PortalUnitController {\r\n    /**\r\n     * 修改密码\r\n     * @param updatePasswordVo - UpdatePasswordVo - body - updatePasswordVo - 必填\r\n     */\r\n    updatePwd(updatePasswordVo: UpdatePasswordVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 修改当前登陆用户头像\r\n     * @param idVo - IDVo - body - idVo - 必填\r\n     */\r\n    updateAvatar(idVo: IDVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 查询用户映射信息\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    getUserMappingInfo(userId: string): Promise<AxiosResponse<ResBodyUserMappingInfoVo, any>>;\r\n    /**\r\n     * 获取用户信息\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    getUserInfo(userId: string): Promise<AxiosResponse<ResBodyUserVo, any>>;\r\n    /**\r\n     * 获取当前登陆用户信息\r\n     */\r\n    getCurUserInfo(): Promise<AxiosResponse<ResBodyUserVo, any>>;\r\n    /**\r\n     * 组织属于、拥有校验\r\n     * @param orgAscriptionCheckVo - OrgAscriptionCheckVo - body - orgAscriptionCheckVo - 必填\r\n     */\r\n    belongToCheck(orgAscriptionCheckVo: OrgAscriptionCheckVo): Promise<AxiosResponse<ResBodyboolean, any>>;\r\n}\r\n"}}
