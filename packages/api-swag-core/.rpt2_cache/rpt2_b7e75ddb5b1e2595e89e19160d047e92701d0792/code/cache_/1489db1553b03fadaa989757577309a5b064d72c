{"map":"{\"version\":3,\"file\":\"loginController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/loginController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IAwEA,CAAC;IAtEC;;;;;OAKG;IACI,kCAAQ,GAAd,UAAgB,IAAY,EAAE,MAAc,EAAE,QAAiB;;;;;4BAClB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,gBAAgB;4BACrB,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,QAAQ,UAAA,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE;yBACnC,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,gCAAM,GAAZ;;;;;4BAC2C,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,cAAc;4BACnB,MAAM,EAAE,QAAQ;yBACjB,CAAC,EAAA;;wBAHI,MAAM,GAA8B,SAGxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,+BAAK,GAAX,UAAa,OAAgB;;;;;4BACgB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,aAAa;4BAClB,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,OAAO;yBACd,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,oCAAU,GAAhB;;;;;4BACyD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC/E,GAAG,EAAE,kBAAkB;4BACvB,MAAM,EAAE,KAAK;yBACd,CAAC,EAAA;;wBAHI,MAAM,GAA4C,SAGtD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,mCAAS,GAAf;;;;;4BACqD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC3E,GAAG,EAAE,iBAAiB;4BACtB,MAAM,EAAE,KAAK;yBACd,CAAC,EAAA;;wBAHI,MAAM,GAAwC,SAGlD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,sBAAC;AAAD,CAAC,AAxED,IAwEC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * login-controller\r\n */\r\nvar LoginController = /** @class */ (function () {\r\n    function LoginController() {\r\n    }\r\n    /**\r\n     * 免密登录\r\n     * @param code - string - query - 授权码 - 必填\r\n     * @param corpId - string - query - 第三方企业id - 必填\r\n     * @param authType - string - query - 免密登陆类型 - 可空\r\n     */\r\n    LoginController.prototype.ssoLogin = function (code, corpId, authType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/auth/ssoLogin',\r\n                            method: 'get',\r\n                            params: { authType: authType, code: code, corpId: corpId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 账户登出\r\n     */\r\n    LoginController.prototype.logout = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/auth/logout',\r\n                            method: 'delete',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 账户登录\r\n     * @param loginVo - LoginVo - body - loginVo - 必填\r\n     */\r\n    LoginController.prototype.login = function (loginVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/auth/login',\r\n                            method: 'post',\r\n                            data: loginVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取登陆组织列表\r\n     */\r\n    LoginController.prototype.getOrgList = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/auth/getOrgList',\r\n                            method: 'get',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取加密公钥\r\n     */\r\n    LoginController.prototype.genRsaKey = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/auth/genRsaKey',\r\n                            method: 'get',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return LoginController;\r\n}());\r\nexport { LoginController };\r\n//# sourceMappingURL=loginController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/loginController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { ResBodyGenKeyResultVo, ResBodyListOrganizationVo, LoginVo, ResBodystring, ResBodyVoid } from '../model';\r\n/**\r\n * login-controller\r\n */\r\nexport declare class LoginController {\r\n    /**\r\n     * 免密登录\r\n     * @param code - string - query - 授权码 - 必填\r\n     * @param corpId - string - query - 第三方企业id - 必填\r\n     * @param authType - string - query - 免密登陆类型 - 可空\r\n     */\r\n    ssoLogin(code: string, corpId: string, authType?: string): Promise<AxiosResponse<ResBodystring, any>>;\r\n    /**\r\n     * 账户登出\r\n     */\r\n    logout(): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 账户登录\r\n     * @param loginVo - LoginVo - body - loginVo - 必填\r\n     */\r\n    login(loginVo: LoginVo): Promise<AxiosResponse<ResBodystring, any>>;\r\n    /**\r\n     * 获取登陆组织列表\r\n     */\r\n    getOrgList(): Promise<AxiosResponse<ResBodyListOrganizationVo, any>>;\r\n    /**\r\n     * 获取加密公钥\r\n     */\r\n    genRsaKey(): Promise<AxiosResponse<ResBodyGenKeyResultVo, any>>;\r\n}\r\n"}}
