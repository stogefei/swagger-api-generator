{"map":"{\"version\":3,\"file\":\"departmentController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/departmentController.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * department-controller\r\n */\r\nvar DepartmentController = /** @class */ (function () {\r\n    function DepartmentController() {\r\n    }\r\n    /**\r\n     * 根据关键字搜索组织\r\n     * @param keyword - string - query - 关键字 - 必填\r\n     */\r\n    DepartmentController.prototype.search = function (keyword) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/search',\r\n                            method: 'get',\r\n                            params: { keyword: keyword },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 保存部门\r\n     * @param departmentVo - DepartmentVo - body - departmentVo - 必填\r\n     */\r\n    DepartmentController.prototype.save = function (departmentVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/save',\r\n                            method: 'post',\r\n                            data: departmentVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 移除用户\r\n     * @param deptUserIdsVo - DeptUserIdsVO - body - deptUserIdsVO - 必填\r\n     */\r\n    DepartmentController.prototype.removeUser = function (deptUserIdsVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/removeUser',\r\n                            method: 'post',\r\n                            data: deptUserIdsVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 移除部门\r\n     * @param deptIds - Array<string> - body - deptIds - 必填\r\n     */\r\n    DepartmentController.prototype.remove = function (deptIds) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/remove',\r\n                            method: 'post',\r\n                            data: deptIds,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据父级id获取子级部门与用户列表\r\n     * @param parentId - string - query - 父id - 可空\r\n     */\r\n    DepartmentController.prototype.listChildUnit = function (parentId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/listChildUnit',\r\n                            method: 'get',\r\n                            params: { parentId: parentId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 分页获取部门下用户列表\r\n     * @param deptId - string - query - 部门id - 必填\r\n     * @param pageNum - number - query - 开始页数 - 必填\r\n     * @param pageSize - number - query - 每页显示数量 - 必填\r\n     * @param keyword - string - query - 关键字 - 可空\r\n     */\r\n    DepartmentController.prototype.getDeptUserListByPage = function (deptId, pageNum, pageSize, keyword) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/getDeptUserListByPage',\r\n                            method: 'get',\r\n                            params: { deptId: deptId, keyword: keyword, pageNum: pageNum, pageSize: pageSize },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取部门下用户列表\r\n     * @param deptId - string - query - 部门id - 必填\r\n     */\r\n    DepartmentController.prototype.getDeptUserList = function (deptId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/getDeptUserList',\r\n                            method: 'get',\r\n                            params: { deptId: deptId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据父级id获取子级部门列表\r\n     * @param queryChildDeptVo - QueryChildDeptVo - body - queryChildDeptVo - 必填\r\n     */\r\n    DepartmentController.prototype.getChildList = function (queryChildDeptVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/getChildList',\r\n                            method: 'post',\r\n                            data: queryChildDeptVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取完整组织树\r\n     * @param parentId - string - query - 父id - 必填\r\n     */\r\n    DepartmentController.prototype.getAllDeptTree = function (parentId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/getAllDeptTree',\r\n                            method: 'get',\r\n                            params: { parentId: parentId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取部门详情\r\n     * @param deptId - string - query - 部门id - 必填\r\n     */\r\n    DepartmentController.prototype.get = function (deptId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/get',\r\n                            method: 'get',\r\n                            params: { deptId: deptId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量新增部门\r\n     * @param batchDeptInsertVo - BatchDeptInsertVo - body - batchDeptInsertVo - 必填\r\n     */\r\n    DepartmentController.prototype.batchSaveDept = function (batchDeptInsertVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/org/dept/batchSaveDept',\r\n                            method: 'post',\r\n                            data: batchDeptInsertVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return DepartmentController;\r\n}());\r\nexport { DepartmentController };\r\n//# sourceMappingURL=departmentController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/departmentController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { BatchDeptInsertVo, ResBodyListDepartmentVo, ResBodyDepartmentVo, ResBodyOrganizationChartVo, QueryChildDeptVo, ResBodyListUserVo, ResBodyPageVOUserVo, ResBodyUnitGroupVo, ResBodyVoid, DeptUserIdsVO, DepartmentVo } from '../model';\r\n/**\r\n * department-controller\r\n */\r\nexport declare class DepartmentController {\r\n    /**\r\n     * 根据关键字搜索组织\r\n     * @param keyword - string - query - 关键字 - 必填\r\n     */\r\n    search(keyword: string): Promise<AxiosResponse<ResBodyListDepartmentVo, any>>;\r\n    /**\r\n     * 保存部门\r\n     * @param departmentVo - DepartmentVo - body - departmentVo - 必填\r\n     */\r\n    save(departmentVo: DepartmentVo): Promise<AxiosResponse<ResBodyDepartmentVo, any>>;\r\n    /**\r\n     * 移除用户\r\n     * @param deptUserIdsVo - DeptUserIdsVO - body - deptUserIdsVO - 必填\r\n     */\r\n    removeUser(deptUserIdsVo: DeptUserIdsVO): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 移除部门\r\n     * @param deptIds - Array<string> - body - deptIds - 必填\r\n     */\r\n    remove(deptIds: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 根据父级id获取子级部门与用户列表\r\n     * @param parentId - string - query - 父id - 可空\r\n     */\r\n    listChildUnit(parentId?: string): Promise<AxiosResponse<ResBodyUnitGroupVo, any>>;\r\n    /**\r\n     * 分页获取部门下用户列表\r\n     * @param deptId - string - query - 部门id - 必填\r\n     * @param pageNum - number - query - 开始页数 - 必填\r\n     * @param pageSize - number - query - 每页显示数量 - 必填\r\n     * @param keyword - string - query - 关键字 - 可空\r\n     */\r\n    getDeptUserListByPage(deptId: string, pageNum: number, pageSize: number, keyword?: string): Promise<AxiosResponse<ResBodyPageVOUserVo, any>>;\r\n    /**\r\n     * 获取部门下用户列表\r\n     * @param deptId - string - query - 部门id - 必填\r\n     */\r\n    getDeptUserList(deptId: string): Promise<AxiosResponse<ResBodyListUserVo, any>>;\r\n    /**\r\n     * 根据父级id获取子级部门列表\r\n     * @param queryChildDeptVo - QueryChildDeptVo - body - queryChildDeptVo - 必填\r\n     */\r\n    getChildList(queryChildDeptVo: QueryChildDeptVo): Promise<AxiosResponse<ResBodyListDepartmentVo, any>>;\r\n    /**\r\n     * 获取完整组织树\r\n     * @param parentId - string - query - 父id - 必填\r\n     */\r\n    getAllDeptTree(parentId: string): Promise<AxiosResponse<ResBodyOrganizationChartVo, any>>;\r\n    /**\r\n     * 获取部门详情\r\n     * @param deptId - string - query - 部门id - 必填\r\n     */\r\n    get(deptId: string): Promise<AxiosResponse<ResBodyDepartmentVo, any>>;\r\n    /**\r\n     * 批量新增部门\r\n     * @param batchDeptInsertVo - BatchDeptInsertVo - body - batchDeptInsertVo - 必填\r\n     */\r\n    batchSaveDept(batchDeptInsertVo: BatchDeptInsertVo): Promise<AxiosResponse<ResBodyListDepartmentVo, any>>;\r\n}\r\n"}}
