{"map":"{\"version\":3,\"file\":\"bizServiceMethodController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/bizServiceMethodController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IA2GA,CAAC;IAzGC;;;OAGG;IACI,2CAAM,GAAZ,UAAc,kBAAsC;;;;;4BACK,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC/E,GAAG,EAAE,qCAAqC;4BAC1C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,kBAAkB;yBACzB,CAAC,EAAA;;wBAJI,MAAM,GAA4C,SAItD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,gDAAW,GAAjB,UAAmB,WAAgC;;;;;4BACN,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,0CAA0C;4BAC/C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,WAAW;yBAClB,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,2CAAM,GAAZ,UAAc,sBAA8C;;;;;4BACjB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,qCAAqC;4BAC1C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,sBAAsB;yBAC7B,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,4CAAO,GAAb,UAAe,WAAmB;;;;;4BAC2B,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnF,GAAG,EAAE,sCAAsC;4BAC3C,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,WAAW,aAAA,EAAE;yBACxB,CAAC,EAAA;;wBAJI,MAAM,GAAgD,SAI1D;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;;OAIG;IACI,wCAAG,GAAT,UAAW,UAAkB,EAAE,WAAmB;;;;;4BACO,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC/E,GAAG,EAAE,kCAAkC;4BACvC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,UAAU,YAAA,EAAE,WAAW,aAAA,EAAE;yBACpC,CAAC,EAAA;;wBAJI,MAAM,GAA4C,SAItD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,uDAAkB,GAAxB,UAA0B,kBAAsC;;;;;4BACP,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC/E,GAAG,EAAE,iDAAiD;4BACtD,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,kBAAkB;yBACzB,CAAC,EAAA;;wBAJI,MAAM,GAA4C,SAItD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,8CAAS,GAAf,UAAiB,aAA4C;;;;;4BACA,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnF,GAAG,EAAE,wCAAwC;4BAC7C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,aAAa;yBACpB,CAAC,EAAA;;wBAJI,MAAM,GAAgD,SAI1D;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,iCAAC;AAAD,CAAC,AA3GD,IA2GC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * biz-service-method-controller\r\n */\r\nvar BizServiceMethodController = /** @class */ (function () {\r\n    function BizServiceMethodController() {\r\n    }\r\n    /**\r\n     * 修改业务方法\r\n     * @param bizServiceMethodVo - BizServiceMethodVo - body - bizServiceMethodVo - 必填\r\n     */\r\n    BizServiceMethodController.prototype.update = function (bizServiceMethodVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/update',\r\n                            method: 'post',\r\n                            data: bizServiceMethodVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 测试连接\r\n     * @param invokeParam - MethodInvokeParamVo - body - invokeParam - 必填\r\n     */\r\n    BizServiceMethodController.prototype.testConnect = function (invokeParam) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/testConnect',\r\n                            method: 'post',\r\n                            data: invokeParam,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除业务方法\r\n     * @param bizServiceMethodCodeVo - BizServiceMethodCodeVo - body - bizServiceMethodCodeVo - 必填\r\n     */\r\n    BizServiceMethodController.prototype.remove = function (bizServiceMethodCodeVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/remove',\r\n                            method: 'post',\r\n                            data: bizServiceMethodCodeVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取业务方法列表\r\n     * @param serviceCode - string - query - 业务服务编码 - 必填\r\n     */\r\n    BizServiceMethodController.prototype.getList = function (serviceCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/getList',\r\n                            method: 'get',\r\n                            params: { serviceCode: serviceCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取指定业务方法\r\n     * @param methodCode - string - query - 业务方法编码 - 必填\r\n     * @param serviceCode - string - query - 业务服务编码 - 必填\r\n     */\r\n    BizServiceMethodController.prototype.get = function (methodCode, serviceCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/get',\r\n                            method: 'get',\r\n                            params: { methodCode: methodCode, serviceCode: serviceCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 新建业务方法\r\n     * @param bizServiceMethodVo - BizServiceMethodVo - body - bizServiceMethodVo - 必填\r\n     */\r\n    BizServiceMethodController.prototype.bizServiceMethodVo = function (bizServiceMethodVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/BizServiceMethodVo',\r\n                            method: 'post',\r\n                            data: bizServiceMethodVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量获取业务方法\r\n     * @param methodCodeVos - Array<BizServiceMethodCodeVo> - body - methodCodeVos - 必填\r\n     */\r\n    BizServiceMethodController.prototype.batchList = function (methodCodeVos) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/bizbus/service/method/batchList',\r\n                            method: 'post',\r\n                            data: methodCodeVos,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BizServiceMethodController;\r\n}());\r\nexport { BizServiceMethodController };\r\n//# sourceMappingURL=bizServiceMethodController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/bizServiceMethodController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { BizServiceMethodVo, ResBodyBizServiceMethodVo, BizServiceMethodCodeVo, ResBodyListBizServiceMethodVo, ResBodyVoid, MethodInvokeParamVo, ResBodyobject } from '../model';\r\n/**\r\n * biz-service-method-controller\r\n */\r\nexport declare class BizServiceMethodController {\r\n    /**\r\n     * 修改业务方法\r\n     * @param bizServiceMethodVo - BizServiceMethodVo - body - bizServiceMethodVo - 必填\r\n     */\r\n    update(bizServiceMethodVo: BizServiceMethodVo): Promise<AxiosResponse<ResBodyBizServiceMethodVo, any>>;\r\n    /**\r\n     * 测试连接\r\n     * @param invokeParam - MethodInvokeParamVo - body - invokeParam - 必填\r\n     */\r\n    testConnect(invokeParam: MethodInvokeParamVo): Promise<AxiosResponse<ResBodyobject, any>>;\r\n    /**\r\n     * 删除业务方法\r\n     * @param bizServiceMethodCodeVo - BizServiceMethodCodeVo - body - bizServiceMethodCodeVo - 必填\r\n     */\r\n    remove(bizServiceMethodCodeVo: BizServiceMethodCodeVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 获取业务方法列表\r\n     * @param serviceCode - string - query - 业务服务编码 - 必填\r\n     */\r\n    getList(serviceCode: string): Promise<AxiosResponse<ResBodyListBizServiceMethodVo, any>>;\r\n    /**\r\n     * 获取指定业务方法\r\n     * @param methodCode - string - query - 业务方法编码 - 必填\r\n     * @param serviceCode - string - query - 业务服务编码 - 必填\r\n     */\r\n    get(methodCode: string, serviceCode: string): Promise<AxiosResponse<ResBodyBizServiceMethodVo, any>>;\r\n    /**\r\n     * 新建业务方法\r\n     * @param bizServiceMethodVo - BizServiceMethodVo - body - bizServiceMethodVo - 必填\r\n     */\r\n    bizServiceMethodVo(bizServiceMethodVo: BizServiceMethodVo): Promise<AxiosResponse<ResBodyBizServiceMethodVo, any>>;\r\n    /**\r\n     * 批量获取业务方法\r\n     * @param methodCodeVos - Array<BizServiceMethodCodeVo> - body - methodCodeVos - 必填\r\n     */\r\n    batchList(methodCodeVos: Array<BizServiceMethodCodeVo>): Promise<AxiosResponse<ResBodyListBizServiceMethodVo, any>>;\r\n}\r\n"}}
