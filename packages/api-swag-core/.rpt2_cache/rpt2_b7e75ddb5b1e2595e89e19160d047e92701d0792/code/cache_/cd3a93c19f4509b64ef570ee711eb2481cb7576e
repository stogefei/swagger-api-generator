{"map":"{\"version\":3,\"file\":\"appPackageController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/appPackageController.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * app-package-controller\r\n */\r\nvar AppPackageController = /** @class */ (function () {\r\n    function AppPackageController() {\r\n    }\r\n    /**\r\n     * 设置应用按权限组授权\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    AppPackageController.prototype.visiblePerGroup = function (ids) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/visiblePerGroup',\r\n                            method: 'post',\r\n                            data: ids,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 设置应用所有用户可见\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    AppPackageController.prototype.visibleAll = function (ids) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/visibleAll',\r\n                            method: 'post',\r\n                            data: ids,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除应用\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    AppPackageController.prototype.remove = function (ids) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/remove',\r\n                            method: 'post',\r\n                            data: ids,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 编辑应用\r\n     * @param appPackageVo - AppPackageVo - body - appPackageVo - 必填\r\n     */\r\n    AppPackageController.prototype.modify = function (appPackageVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/modify',\r\n                            method: 'post',\r\n                            data: appPackageVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取用户拥有的应用列表\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    AppPackageController.prototype.listOwn = function (userId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/listOwn',\r\n                            method: 'get',\r\n                            params: { userId: userId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 分组方式获取应用列表\r\n     * @param flagVo - FlagVo - body - flagVo - 必填\r\n     */\r\n    AppPackageController.prototype.listGroupBy = function (flagVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/listGroupBy',\r\n                            method: 'post',\r\n                            data: flagVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取启用的应用列表\r\n     */\r\n    AppPackageController.prototype.listEnable = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/listEnable',\r\n                            method: 'post',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取应用列表\r\n     */\r\n    AppPackageController.prototype.list = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/list',\r\n                            method: 'post',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 修改应用分组名称\r\n     * @param appGroupVo - AppGroupVo - body - appGroupVo - 必填\r\n     */\r\n    AppPackageController.prototype.groupUpdate = function (appGroupVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/groupUpdate',\r\n                            method: 'post',\r\n                            data: appGroupVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除应用分组\r\n     * @param idVo - IDVo - body - idVo - 必填\r\n     */\r\n    AppPackageController.prototype.groupRemove = function (idVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/groupRemove',\r\n                            method: 'post',\r\n                            data: idVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取应用分组列表\r\n     */\r\n    AppPackageController.prototype.groupList = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/groupList',\r\n                            method: 'post',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 新增应用分组\r\n     * @param nameVo - NameVo - body - nameVo - 必填\r\n     */\r\n    AppPackageController.prototype.groupAdd = function (nameVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/groupAdd',\r\n                            method: 'post',\r\n                            data: nameVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据应用编码获取应用详情\r\n     * @param code - string - query - 应用编码 - 必填\r\n     */\r\n    AppPackageController.prototype.getByCode = function (code) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/getByCode',\r\n                            method: 'get',\r\n                            params: { code: code },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取应用详情\r\n     * @param id - string - query - 应用id - 必填\r\n     */\r\n    AppPackageController.prototype.get = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/get',\r\n                            method: 'get',\r\n                            params: { id: id },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 启用应用\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    AppPackageController.prototype.enable = function (ids) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/enable',\r\n                            method: 'post',\r\n                            data: ids,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 禁用应用\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    AppPackageController.prototype.disable = function (ids) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/disable',\r\n                            method: 'post',\r\n                            data: ids,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 创建应用\r\n     * @param appPackageVo - AppPackageVo - body - appPackageVo - 必填\r\n     */\r\n    AppPackageController.prototype.create = function (appPackageVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/create',\r\n                            method: 'post',\r\n                            data: appPackageVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AppPackageController;\r\n}());\r\nexport { AppPackageController };\r\n//# sourceMappingURL=appPackageController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/appPackageController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { AppPackageVo, ResBodyAppPackageVo, ResBodyVoid, NameVo, ResBodyAppGroupVo, ResBodyListAppGroupVo, IDVo, AppGroupVo, ResBodyListAppPackageVo, FlagVo, ResBodyListFunTreeVo } from '../model';\r\n/**\r\n * app-package-controller\r\n */\r\nexport declare class AppPackageController {\r\n    /**\r\n     * 设置应用按权限组授权\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    visiblePerGroup(ids: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 设置应用所有用户可见\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    visibleAll(ids: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 删除应用\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    remove(ids: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 编辑应用\r\n     * @param appPackageVo - AppPackageVo - body - appPackageVo - 必填\r\n     */\r\n    modify(appPackageVo: AppPackageVo): Promise<AxiosResponse<ResBodyAppPackageVo, any>>;\r\n    /**\r\n     * 获取用户拥有的应用列表\r\n     * @param userId - string - query - 用户id - 必填\r\n     */\r\n    listOwn(userId: string): Promise<AxiosResponse<ResBodyListAppPackageVo, any>>;\r\n    /**\r\n     * 分组方式获取应用列表\r\n     * @param flagVo - FlagVo - body - flagVo - 必填\r\n     */\r\n    listGroupBy(flagVo: FlagVo): Promise<AxiosResponse<ResBodyListFunTreeVo, any>>;\r\n    /**\r\n     * 获取启用的应用列表\r\n     */\r\n    listEnable(): Promise<AxiosResponse<ResBodyListAppPackageVo, any>>;\r\n    /**\r\n     * 获取应用列表\r\n     */\r\n    list(): Promise<AxiosResponse<ResBodyListAppPackageVo, any>>;\r\n    /**\r\n     * 修改应用分组名称\r\n     * @param appGroupVo - AppGroupVo - body - appGroupVo - 必填\r\n     */\r\n    groupUpdate(appGroupVo: AppGroupVo): Promise<AxiosResponse<ResBodyAppGroupVo, any>>;\r\n    /**\r\n     * 删除应用分组\r\n     * @param idVo - IDVo - body - idVo - 必填\r\n     */\r\n    groupRemove(idVo: IDVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 获取应用分组列表\r\n     */\r\n    groupList(): Promise<AxiosResponse<ResBodyListAppGroupVo, any>>;\r\n    /**\r\n     * 新增应用分组\r\n     * @param nameVo - NameVo - body - nameVo - 必填\r\n     */\r\n    groupAdd(nameVo: NameVo): Promise<AxiosResponse<ResBodyAppGroupVo, any>>;\r\n    /**\r\n     * 根据应用编码获取应用详情\r\n     * @param code - string - query - 应用编码 - 必填\r\n     */\r\n    getByCode(code: string): Promise<AxiosResponse<ResBodyAppPackageVo, any>>;\r\n    /**\r\n     * 获取应用详情\r\n     * @param id - string - query - 应用id - 必填\r\n     */\r\n    get(id: string): Promise<AxiosResponse<ResBodyAppPackageVo, any>>;\r\n    /**\r\n     * 启用应用\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    enable(ids: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 禁用应用\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    disable(ids: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 创建应用\r\n     * @param appPackageVo - AppPackageVo - body - appPackageVo - 必填\r\n     */\r\n    create(appPackageVo: AppPackageVo): Promise<AxiosResponse<ResBodyAppPackageVo, any>>;\r\n}\r\n"}}
