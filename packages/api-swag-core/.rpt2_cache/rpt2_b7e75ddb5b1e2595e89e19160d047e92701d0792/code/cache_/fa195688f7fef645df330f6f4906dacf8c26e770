{"map":"{\"version\":3,\"file\":\"bizSchemaEventController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/bizSchemaEventController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IAyFA,CAAC;IAvFC;;;OAGG;IACI,yCAAM,GAAZ,UAAc,gBAAkC;;;;;4BACL,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,kCAAkC;4BACvC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,gBAAgB;yBACvB,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,oDAAiB,GAAvB,UAAyB,UAAkB;;;;;4BACgB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjF,GAAG,EAAE,6CAA6C;4BAClD,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,UAAU,YAAA,EAAE;yBACvB,CAAC,EAAA;;wBAJI,MAAM,GAA8C,SAIxD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;OAEG;IACI,uCAAI,GAAV;;;;;4BAC2D,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjF,GAAG,EAAE,gCAAgC;4BACrC,MAAM,EAAE,MAAM;yBACf,CAAC,EAAA;;wBAHI,MAAM,GAA8C,SAGxD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,sCAAG,GAAT,UAAW,EAAU;;;;;4BACkC,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC7E,GAAG,EAAE,+BAA+B;4BACpC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,EAAE,IAAA,EAAE;yBACf,CAAC,EAAA;;wBAJI,MAAM,GAA0C,SAIpD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,yCAAM,GAAZ,UAAc,EAAU;;;;;4BACmB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,kCAAkC;4BACvC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,EAAE,IAAA,EAAE;yBACf,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,yCAAM,GAAZ,UAAc,gBAAkC;;;;;4BACH,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACnE,GAAG,EAAE,kCAAkC;4BACvC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,gBAAgB;yBACvB,CAAC,EAAA;;wBAJI,MAAM,GAAgC,SAI1C;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,+BAAC;AAAD,CAAC,AAzFD,IAyFC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * biz-schema-event-controller\r\n */\r\nvar BizSchemaEventController = /** @class */ (function () {\r\n    function BizSchemaEventController() {\r\n    }\r\n    /**\r\n     * 修改事件\r\n     * @param bizSchemaEventVo - BizSchemaEventVo - body - bizSchemaEventVo - 必填\r\n     */\r\n    BizSchemaEventController.prototype.update = function (bizSchemaEventVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/event/update',\r\n                            method: 'post',\r\n                            data: bizSchemaEventVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据模型编码获取事件列表\r\n     * @param schemaCode - string - query - schemaCode - 必填\r\n     */\r\n    BizSchemaEventController.prototype.queryBySchemaCode = function (schemaCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/event/queryBySchemaCode',\r\n                            method: 'get',\r\n                            params: { schemaCode: schemaCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 查询所有事件列表\r\n     */\r\n    BizSchemaEventController.prototype.list = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/event/list',\r\n                            method: 'post',\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取事件详情\r\n     * @param id - string - query - id - 必填\r\n     */\r\n    BizSchemaEventController.prototype.get = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/event/get',\r\n                            method: 'get',\r\n                            params: { id: id },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除事件\r\n     * @param id - string - query - id - 必填\r\n     */\r\n    BizSchemaEventController.prototype.delete = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/event/delete',\r\n                            method: 'get',\r\n                            params: { id: id },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 新增事件\r\n     * @param bizSchemaEventVo - BizSchemaEventVo - body - bizSchemaEventVo - 必填\r\n     */\r\n    BizSchemaEventController.prototype.create = function (bizSchemaEventVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/event/create',\r\n                            method: 'post',\r\n                            data: bizSchemaEventVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BizSchemaEventController;\r\n}());\r\nexport { BizSchemaEventController };\r\n//# sourceMappingURL=bizSchemaEventController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/bizSchemaEventController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { BizSchemaEventVo, ResBodystring, ResBodyVoid, ResBodyBizSchemaEventVo, ResBodyListBizSchemaEventVo } from '../model';\r\n/**\r\n * biz-schema-event-controller\r\n */\r\nexport declare class BizSchemaEventController {\r\n    /**\r\n     * 修改事件\r\n     * @param bizSchemaEventVo - BizSchemaEventVo - body - bizSchemaEventVo - 必填\r\n     */\r\n    update(bizSchemaEventVo: BizSchemaEventVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 根据模型编码获取事件列表\r\n     * @param schemaCode - string - query - schemaCode - 必填\r\n     */\r\n    queryBySchemaCode(schemaCode: string): Promise<AxiosResponse<ResBodyListBizSchemaEventVo, any>>;\r\n    /**\r\n     * 查询所有事件列表\r\n     */\r\n    list(): Promise<AxiosResponse<ResBodyListBizSchemaEventVo, any>>;\r\n    /**\r\n     * 获取事件详情\r\n     * @param id - string - query - id - 必填\r\n     */\r\n    get(id: string): Promise<AxiosResponse<ResBodyBizSchemaEventVo, any>>;\r\n    /**\r\n     * 删除事件\r\n     * @param id - string - query - id - 必填\r\n     */\r\n    delete(id: string): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 新增事件\r\n     * @param bizSchemaEventVo - BizSchemaEventVo - body - bizSchemaEventVo - 必填\r\n     */\r\n    create(bizSchemaEventVo: BizSchemaEventVo): Promise<AxiosResponse<ResBodystring, any>>;\r\n}\r\n"}}
