{"map":"{\"version\":3,\"file\":\"bizPropertyController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/bizPropertyController.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,GAAG,MAAM,aAAa,CAAA;AAK7B;;GAEG;AACH;IAAA;IA0KA,CAAC;IAxKC;;;OAGG;IACI,oCAAI,GAAV,UAAY,iBAAoC;;;;;4BACL,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,mCAAmC;4BACxC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,iBAAiB;yBACxB,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,sCAAM,GAAZ,UAAc,oBAA0C;;;;;4BACD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC7E,GAAG,EAAE,qCAAqC;4BAC1C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,oBAAoB;yBAC3B,CAAC,EAAA;;wBAJI,MAAM,GAA0C,SAIpD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,sCAAM,GAAZ,UAAc,aAA4B;;;;;4BACU,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC1E,GAAG,EAAE,qCAAqC;4BAC1C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,aAAa;yBACpB,CAAC,EAAA;;wBAJI,MAAM,GAAuC,SAIjD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;;;OAKG;IACI,oCAAI,GAAV,UAAY,UAAkB,EAAE,oBAA8B,EAAE,QAAiB;;;;;4BACzB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC9E,GAAG,EAAE,mCAAmC;4BACxC,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,oBAAoB,sBAAA,EAAE,UAAU,YAAA,EAAE,QAAQ,UAAA,EAAE;yBACvD,CAAC,EAAA;;wBAJI,MAAM,GAA2C,SAIrD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;;OAIG;IACI,4DAA4B,GAAlC,UAAoC,YAAoB,EAAE,oBAA8B;;;;;4BAChC,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC9E,GAAG,EAAE,2DAA2D;4BAChE,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,oBAAoB,sBAAA,EAAE,YAAY,cAAA,EAAE;yBAC/C,CAAC,EAAA;;wBAJI,MAAM,GAA2C,SAIrD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;;OAIG;IACI,8CAAc,GAApB,UAAsB,UAAkB,EAAE,oBAA8B;;;;;4BAChB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC9E,GAAG,EAAE,6CAA6C;4BAClD,MAAM,EAAE,KAAK;4BACb,MAAM,EAAE,EAAE,oBAAoB,sBAAA,EAAE,UAAU,YAAA,EAAE;yBAC7C,CAAC,EAAA;;wBAJI,MAAM,GAA2C,SAIrD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,mCAAG,GAAT,UAAW,oBAA0C;;;;;4BACD,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC1E,GAAG,EAAE,kCAAkC;4BACvC,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,oBAAoB;yBAC3B,CAAC,EAAA;;wBAJI,MAAM,GAAuC,SAIjD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,sCAAM,GAAZ,UAAc,aAA4B;;;;;4BACU,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BAC1E,GAAG,EAAE,qCAAqC;4BAC1C,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,aAAa;yBACpB,CAAC,EAAA;;wBAJI,MAAM,GAAuC,SAIjD;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,6CAAa,GAAnB,UAAqB,oBAA0C;;;;;4BACpB,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACjE,GAAG,EAAE,4CAA4C;4BACjD,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,oBAAoB;yBAC3B,CAAC,EAAA;;wBAJI,MAAM,GAA8B,SAIxC;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,+DAA+B,GAArC,UAAuC,aAA4B;;;;;4BACF,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACvF,GAAG,EAAE,8DAA8D;4BACnE,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,aAAa;yBACpB,CAAC,EAAA;;wBAJI,MAAM,GAAoD,SAI9D;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAID;;;OAGG;IACI,gDAAgB,GAAtB,UAAwB,WAA0B;;;;;4BACe,qBAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;4BACvF,GAAG,EAAE,+CAA+C;4BACpD,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,WAAW;yBAClB,CAAC,EAAA;;wBAJI,MAAM,GAAoD,SAI9D;wBACF,sBAAO,MAAM,EAAC;;;;KACf;IAGH,4BAAC;AAAD,CAAC,AA1KD,IA0KC\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * biz-property-controller\r\n */\r\nvar BizPropertyController = /** @class */ (function () {\r\n    function BizPropertyController() {\r\n    }\r\n    /**\r\n     * 数据项排序\r\n     * @param bizPropertySortVo - BizPropertySortVo - body - bizPropertySortVo - 必填\r\n     */\r\n    BizPropertyController.prototype.sort = function (bizPropertySortVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/sort',\r\n                            method: 'post',\r\n                            data: bizPropertySortVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除数据项\r\n     * @param schemaPropertyCodeVo - SchemaPropertyCodeVo - body - schemaPropertyCodeVo - 必填\r\n     */\r\n    BizPropertyController.prototype.remove = function (schemaPropertyCodeVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/remove',\r\n                            method: 'post',\r\n                            data: schemaPropertyCodeVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 修改数据项\r\n     * @param bizPropertyVo - BizPropertyVo - body - bizPropertyVo - 必填\r\n     */\r\n    BizPropertyController.prototype.modify = function (bizPropertyVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/modify',\r\n                            method: 'post',\r\n                            data: bizPropertyVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取数据项列表\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     * @param loadSheetSysProperty - boolean - query - 是否加载子表系统字段 - 可空\r\n     * @param sortType - string - query - 排序 - 可空\r\n     */\r\n    BizPropertyController.prototype.list = function (schemaCode, loadSheetSysProperty, sortType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/list',\r\n                            method: 'get',\r\n                            params: { loadSheetSysProperty: loadSheetSysProperty, schemaCode: schemaCode, sortType: sortType },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据流程编码获取已发布的数据项列表\r\n     * @param workflowCode - string - query - 流程编码 - 必填\r\n     * @param loadSheetSysProperty - boolean - query - 模型编码 - 可空\r\n     */\r\n    BizPropertyController.prototype.getPublishListByWorkflowCode = function (workflowCode, loadSheetSysProperty) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/getPublishListByWorkflowCode',\r\n                            method: 'get',\r\n                            params: { loadSheetSysProperty: loadSheetSysProperty, workflowCode: workflowCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取已发布的数据项列表\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     * @param loadSheetSysProperty - boolean - query - 是否加载子表系统字段 - 可空\r\n     */\r\n    BizPropertyController.prototype.getPublishList = function (schemaCode, loadSheetSysProperty) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/getPublishList',\r\n                            method: 'get',\r\n                            params: { loadSheetSysProperty: loadSheetSysProperty, schemaCode: schemaCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取数据项详情\r\n     * @param schemaPropertyCodeVo - SchemaPropertyCodeVo - body - schemaPropertyCodeVo - 必填\r\n     */\r\n    BizPropertyController.prototype.get = function (schemaPropertyCodeVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/get',\r\n                            method: 'post',\r\n                            data: schemaPropertyCodeVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 创建数据项\r\n     * @param bizPropertyVo - BizPropertyVo - body - bizPropertyVo - 必填\r\n     */\r\n    BizPropertyController.prototype.create = function (bizPropertyVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/create',\r\n                            method: 'post',\r\n                            data: bizPropertyVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 确认删除数据项\r\n     * @param schemaPropertyCodeVo - SchemaPropertyCodeVo - body - schemaPropertyCodeVo - 必填\r\n     */\r\n    BizPropertyController.prototype.confirmRemove = function (schemaPropertyCodeVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/confirmRemove',\r\n                            method: 'post',\r\n                            data: schemaPropertyCodeVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 根据流程编码批量获取已发布的数据项列表\r\n     * @param workflowCodes - Array<string> - body - workflowCodes - 必填\r\n     */\r\n    BizPropertyController.prototype.batchListPublishByWorkflowCodes = function (workflowCodes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/batchListPublishByWorkflowCodes',\r\n                            method: 'post',\r\n                            data: workflowCodes,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 批量获取模型已发布的数据项列表\r\n     * @param schemaCodes - Array<string> - body - schemaCodes - 必填\r\n     */\r\n    BizPropertyController.prototype.batchListPublish = function (schemaCodes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/schema/property/batchListPublish',\r\n                            method: 'post',\r\n                            data: schemaCodes,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BizPropertyController;\r\n}());\r\nexport { BizPropertyController };\r\n//# sourceMappingURL=bizPropertyController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/bizPropertyController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { ResBodyMapstringListBizPropertyVo, SchemaPropertyCodeVo, ResBodyVoid, BizPropertyVo, ResBodyBizPropertyVo, ResBodyListBizPropertyVo, ResBodyRemovePropertyVo, BizPropertySortVo } from '../model';\r\n/**\r\n * biz-property-controller\r\n */\r\nexport declare class BizPropertyController {\r\n    /**\r\n     * 数据项排序\r\n     * @param bizPropertySortVo - BizPropertySortVo - body - bizPropertySortVo - 必填\r\n     */\r\n    sort(bizPropertySortVo: BizPropertySortVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 删除数据项\r\n     * @param schemaPropertyCodeVo - SchemaPropertyCodeVo - body - schemaPropertyCodeVo - 必填\r\n     */\r\n    remove(schemaPropertyCodeVo: SchemaPropertyCodeVo): Promise<AxiosResponse<ResBodyRemovePropertyVo, any>>;\r\n    /**\r\n     * 修改数据项\r\n     * @param bizPropertyVo - BizPropertyVo - body - bizPropertyVo - 必填\r\n     */\r\n    modify(bizPropertyVo: BizPropertyVo): Promise<AxiosResponse<ResBodyBizPropertyVo, any>>;\r\n    /**\r\n     * 获取数据项列表\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     * @param loadSheetSysProperty - boolean - query - 是否加载子表系统字段 - 可空\r\n     * @param sortType - string - query - 排序 - 可空\r\n     */\r\n    list(schemaCode: string, loadSheetSysProperty?: boolean, sortType?: string): Promise<AxiosResponse<ResBodyListBizPropertyVo, any>>;\r\n    /**\r\n     * 根据流程编码获取已发布的数据项列表\r\n     * @param workflowCode - string - query - 流程编码 - 必填\r\n     * @param loadSheetSysProperty - boolean - query - 模型编码 - 可空\r\n     */\r\n    getPublishListByWorkflowCode(workflowCode: string, loadSheetSysProperty?: boolean): Promise<AxiosResponse<ResBodyListBizPropertyVo, any>>;\r\n    /**\r\n     * 获取已发布的数据项列表\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     * @param loadSheetSysProperty - boolean - query - 是否加载子表系统字段 - 可空\r\n     */\r\n    getPublishList(schemaCode: string, loadSheetSysProperty?: boolean): Promise<AxiosResponse<ResBodyListBizPropertyVo, any>>;\r\n    /**\r\n     * 获取数据项详情\r\n     * @param schemaPropertyCodeVo - SchemaPropertyCodeVo - body - schemaPropertyCodeVo - 必填\r\n     */\r\n    get(schemaPropertyCodeVo: SchemaPropertyCodeVo): Promise<AxiosResponse<ResBodyBizPropertyVo, any>>;\r\n    /**\r\n     * 创建数据项\r\n     * @param bizPropertyVo - BizPropertyVo - body - bizPropertyVo - 必填\r\n     */\r\n    create(bizPropertyVo: BizPropertyVo): Promise<AxiosResponse<ResBodyBizPropertyVo, any>>;\r\n    /**\r\n     * 确认删除数据项\r\n     * @param schemaPropertyCodeVo - SchemaPropertyCodeVo - body - schemaPropertyCodeVo - 必填\r\n     */\r\n    confirmRemove(schemaPropertyCodeVo: SchemaPropertyCodeVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 根据流程编码批量获取已发布的数据项列表\r\n     * @param workflowCodes - Array<string> - body - workflowCodes - 必填\r\n     */\r\n    batchListPublishByWorkflowCodes(workflowCodes: Array<string>): Promise<AxiosResponse<ResBodyMapstringListBizPropertyVo, any>>;\r\n    /**\r\n     * 批量获取模型已发布的数据项列表\r\n     * @param schemaCodes - Array<string> - body - schemaCodes - 必填\r\n     */\r\n    batchListPublish(schemaCodes: Array<string>): Promise<AxiosResponse<ResBodyMapstringListBizPropertyVo, any>>;\r\n}\r\n"}}
