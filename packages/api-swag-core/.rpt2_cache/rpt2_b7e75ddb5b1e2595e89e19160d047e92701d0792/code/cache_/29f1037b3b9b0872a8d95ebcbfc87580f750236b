{"map":"{\"version\":3,\"file\":\"appPermissionController.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/api/api-control/appPermissionController.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { __awaiter, __generator } from \"tslib\";\r\nimport API from '../../index';\r\n/**\r\n * app-permission-controller\r\n */\r\nvar AppPermissionController = /** @class */ (function () {\r\n    function AppPermissionController() {\r\n    }\r\n    /**\r\n     * 修改权限组\r\n     * @param appPerGroupVo - AppPerGroupVo - body - appPerGroupVo - 必填\r\n     */\r\n    AppPermissionController.prototype.updateGroup = function (appPerGroupVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/updateGroup',\r\n                            method: 'post',\r\n                            data: appPerGroupVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 排序\r\n     * @param sortVo - AppPerGroupSortVo - body - sortVo - 必填\r\n     */\r\n    AppPermissionController.prototype.sort = function (sortVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/sort',\r\n                            method: 'post',\r\n                            data: sortVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 保存权限组的模型权限\r\n     * @param saveSchemaPermissionVo - SaveSchemaPermissionVo - body - saveSchemaPermissionVo - 必填\r\n     */\r\n    AppPermissionController.prototype.saveSchemaPermissions = function (saveSchemaPermissionVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/saveSchemaPermissions',\r\n                            method: 'post',\r\n                            data: saveSchemaPermissionVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取应用下模型权限资源\r\n     * @param appCode - string - query - 应用编码 - 必填\r\n     */\r\n    AppPermissionController.prototype.resource = function (appCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/resource',\r\n                            method: 'get',\r\n                            params: { appCode: appCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 重命名\r\n     * @param renameVo - IdNameVo - body - renameVo - 必填\r\n     */\r\n    AppPermissionController.prototype.rename = function (renameVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/rename',\r\n                            method: 'post',\r\n                            data: renameVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 删除权限组\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    AppPermissionController.prototype.removeGroups = function (ids) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/removeGroups',\r\n                            method: 'post',\r\n                            data: ids,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取指定模型的数据项权限资源\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    AppPermissionController.prototype.propertyResource = function (schemaCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/propertyResource',\r\n                            method: 'get',\r\n                            params: { schemaCode: schemaCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取权限组的模型权限列表\r\n     * @param perGroupId - string - query - 权限组id - 必填\r\n     */\r\n    AppPermissionController.prototype.listSchemaPermission = function (perGroupId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/listSchemaPermission',\r\n                            method: 'get',\r\n                            params: { perGroupId: perGroupId },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取应用权限组列表\r\n     * @param appCode - string - query - 应用编码 - 必填\r\n     */\r\n    AppPermissionController.prototype.listGroups = function (appCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/listGroups',\r\n                            method: 'get',\r\n                            params: { appCode: appCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 获取权限组的下指定模型权限\r\n     * @param perGroupId - string - query - 权限组id - 必填\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    AppPermissionController.prototype.getSchemaPermission = function (perGroupId, schemaCode) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/getSchemaPermission',\r\n                            method: 'get',\r\n                            params: { perGroupId: perGroupId, schemaCode: schemaCode },\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * 创建权限组\r\n     * @param appPerGroupVo - AppPerGroupVo - body - appPerGroupVo - 必填\r\n     */\r\n    AppPermissionController.prototype.createGroup = function (appPerGroupVo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, API.Global.request({\r\n                            url: '/admin/model/app/permission/createGroup',\r\n                            method: 'post',\r\n                            data: appPerGroupVo,\r\n                        })];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return AppPermissionController;\r\n}());\r\nexport { AppPermissionController };\r\n//# sourceMappingURL=appPermissionController.js.map","dts":{"name":"/Users/aofeizhu/github-self/swagger-api-generator/packages/api-swag-core/dist/types/api/api-control/appPermissionController.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\r\nimport { AppPerGroupVo, ResBodyAppPerGroupVo, ResBodySchemaPermissionVo, ResBodyListAppPerGroupVo, ResBodyListSchemaPermissionVo, ResBodyListSchemaPropertyPermissionVo, ResBodyVoid, IdNameVo, ResBodyAppPermissionSettingVo, SaveSchemaPermissionVo, AppPerGroupSortVo } from '../model';\r\n/**\r\n * app-permission-controller\r\n */\r\nexport declare class AppPermissionController {\r\n    /**\r\n     * 修改权限组\r\n     * @param appPerGroupVo - AppPerGroupVo - body - appPerGroupVo - 必填\r\n     */\r\n    updateGroup(appPerGroupVo: AppPerGroupVo): Promise<AxiosResponse<ResBodyAppPerGroupVo, any>>;\r\n    /**\r\n     * 排序\r\n     * @param sortVo - AppPerGroupSortVo - body - sortVo - 必填\r\n     */\r\n    sort(sortVo: AppPerGroupSortVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 保存权限组的模型权限\r\n     * @param saveSchemaPermissionVo - SaveSchemaPermissionVo - body - saveSchemaPermissionVo - 必填\r\n     */\r\n    saveSchemaPermissions(saveSchemaPermissionVo: SaveSchemaPermissionVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 获取应用下模型权限资源\r\n     * @param appCode - string - query - 应用编码 - 必填\r\n     */\r\n    resource(appCode: string): Promise<AxiosResponse<ResBodyAppPermissionSettingVo, any>>;\r\n    /**\r\n     * 重命名\r\n     * @param renameVo - IdNameVo - body - renameVo - 必填\r\n     */\r\n    rename(renameVo: IdNameVo): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 删除权限组\r\n     * @param ids - Array<string> - body - ids - 必填\r\n     */\r\n    removeGroups(ids: Array<string>): Promise<AxiosResponse<ResBodyVoid, any>>;\r\n    /**\r\n     * 获取指定模型的数据项权限资源\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    propertyResource(schemaCode: string): Promise<AxiosResponse<ResBodyListSchemaPropertyPermissionVo, any>>;\r\n    /**\r\n     * 获取权限组的模型权限列表\r\n     * @param perGroupId - string - query - 权限组id - 必填\r\n     */\r\n    listSchemaPermission(perGroupId: string): Promise<AxiosResponse<ResBodyListSchemaPermissionVo, any>>;\r\n    /**\r\n     * 获取应用权限组列表\r\n     * @param appCode - string - query - 应用编码 - 必填\r\n     */\r\n    listGroups(appCode: string): Promise<AxiosResponse<ResBodyListAppPerGroupVo, any>>;\r\n    /**\r\n     * 获取权限组的下指定模型权限\r\n     * @param perGroupId - string - query - 权限组id - 必填\r\n     * @param schemaCode - string - query - 模型编码 - 必填\r\n     */\r\n    getSchemaPermission(perGroupId: string, schemaCode: string): Promise<AxiosResponse<ResBodySchemaPermissionVo, any>>;\r\n    /**\r\n     * 创建权限组\r\n     * @param appPerGroupVo - AppPerGroupVo - body - appPerGroupVo - 必填\r\n     */\r\n    createGroup(appPerGroupVo: AppPerGroupVo): Promise<AxiosResponse<ResBodyAppPerGroupVo, any>>;\r\n}\r\n"}}
