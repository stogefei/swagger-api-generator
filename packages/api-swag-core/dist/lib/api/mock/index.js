"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable */
// @ts-ignore
var mockjs_1 = require("mockjs");
var bizDataSourceController_1 = require("./bizDataSourceController");
var bizServiceCategroyController_1 = require("./bizServiceCategroyController");
var bizServiceController_1 = require("./bizServiceController");
var bizServiceMethodController_1 = require("./bizServiceMethodController");
var formDesignController_1 = require("./formDesignController");
var formTemplateController_1 = require("./formTemplateController");
var licenseController_1 = require("./licenseController");
var appPackageController_1 = require("./appPackageController");
var appPermissionController_1 = require("./appPermissionController");
var bizRuleController_1 = require("./bizRuleController");
var modelFunTreeController_1 = require("./modelFunTreeController");
var bizMenuController_1 = require("./bizMenuController");
var bizSchemaController_1 = require("./bizSchemaController");
var bizSchemaEventController_1 = require("./bizSchemaEventController");
var bizPropertyFormulaController_1 = require("./bizPropertyFormulaController");
var bizPropertyController_1 = require("./bizPropertyController");
var bizViewController_1 = require("./bizViewController");
var workflowDesignController_1 = require("./workflowDesignController");
var organizationController_1 = require("./organizationController");
var departmentController_1 = require("./departmentController");
var tagController_1 = require("./tagController");
var adminUnitTreeController_1 = require("./adminUnitTreeController");
var userController_1 = require("./userController");
var userBizController_1 = require("./userBizController");
var adminController_1 = require("./adminController");
var adminRoleController_1 = require("./adminRoleController");
var advancedDataSourceController_1 = require("./advancedDataSourceController");
var chartController_1 = require("./chartController");
var dashboardController_1 = require("./dashboardController");
var reportDataSourceController_1 = require("./reportDataSourceController");
var olapController_1 = require("./olapController");
var schedulerController_1 = require("./schedulerController");
var sysDictController_1 = require("./sysDictController");
var sysLogController_1 = require("./sysLogController");
var sysParamsController_1 = require("./sysParamsController");
var securityClientController_1 = require("./securityClientController");
var loginController_1 = require("./loginController");
var documentFileController_1 = require("./documentFileController");
var excelController_1 = require("./excelController");
var authController_1 = require("./authController");
var organizationOpenApi_1 = require("./organizationOpenApi");
var formRuntimeOpenApi_1 = require("./formRuntimeOpenApi");
var instanceRuntimeOpenApi_1 = require("./instanceRuntimeOpenApi");
var workflowRuntimeOpenApi_1 = require("./workflowRuntimeOpenApi");
var workItemRuntimeOpenApi_1 = require("./workItemRuntimeOpenApi");
var appController_1 = require("./appController");
var bizObjectController_1 = require("./bizObjectController");
var formCommentController_1 = require("./formCommentController");
var portalFormTemplateController_1 = require("./portalFormTemplateController");
var jsSignController_1 = require("./jsSignController");
var messageController_1 = require("./messageController");
var portalModelFunTreeController_1 = require("./portalModelFunTreeController");
var olapRuntimeController_1 = require("./olapRuntimeController");
var externalController_1 = require("./externalController");
var formRuntimeController_1 = require("./formRuntimeController");
var instanceRuntimeController_1 = require("./instanceRuntimeController");
var workflowRuntimeController_1 = require("./workflowRuntimeController");
var workItemRuntimeController_1 = require("./workItemRuntimeController");
var bizServerInvokeController_1 = require("./bizServerInvokeController");
var portalSysDictController_1 = require("./portalSysDictController");
var portalUnitController_1 = require("./portalUnitController");
var portalUnitTreeController_1 = require("./portalUnitTreeController");
var portalUserBizController_1 = require("./portalUserBizController");
var appViewController_1 = require("./appViewController");
var workbenchController_1 = require("./workbenchController");
var quickLinkController_1 = require("./quickLinkController");
var workflowDelegateController_1 = require("./workflowDelegateController");
var shortLinkController_1 = require("./shortLinkController");
var idGeneratorController_1 = require("./idGeneratorController");
var securityController_1 = require("./securityController");
var notifyController_1 = require("./notifyController");
mockjs_1.default.setup({
    timeout: '350-1000',
});
mockjs_1.default.mock(/\/admin\/bizbus\/datasource\/update/, 'post', bizDataSourceController_1.default.update);
mockjs_1.default.mock(/\/admin\/bizbus\/datasource\/remove/, 'post', bizDataSourceController_1.default.remove);
mockjs_1.default.mock(/\/admin\/bizbus\/datasource\/getList/, 'get', bizDataSourceController_1.default.getList);
mockjs_1.default.mock(/\/admin\/bizbus\/datasource\/create/, 'post', bizDataSourceController_1.default.create);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/categroy\/update/, 'post', bizServiceCategroyController_1.default.update);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/categroy\/remove/, 'post', bizServiceCategroyController_1.default.remove);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/categroy\/getList/, 'get', bizServiceCategroyController_1.default.getList);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/categroy\/create/, 'post', bizServiceCategroyController_1.default.create);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/update/, 'post', bizServiceController_1.default.update);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/remove/, 'post', bizServiceController_1.default.remove);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/listServiceTree/, 'get', bizServiceController_1.default.listServiceTree);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/listAll/, 'get', bizServiceController_1.default.listAll);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/getList/, 'get', bizServiceController_1.default.getList);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/create/, 'post', bizServiceController_1.default.create);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/update/, 'post', bizServiceMethodController_1.default.update);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/testConnect/, 'post', bizServiceMethodController_1.default.testConnect);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/remove/, 'post', bizServiceMethodController_1.default.remove);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/getList/, 'get', bizServiceMethodController_1.default.getList);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/get/, 'get', bizServiceMethodController_1.default.get);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/BizServiceMethodVo/, 'post', bizServiceMethodController_1.default.bizServiceMethodVo);
mockjs_1.default.mock(/\/admin\/bizbus\/service\/method\/batchList/, 'post', bizServiceMethodController_1.default.batchList);
mockjs_1.default.mock(/\/admin\/form\/remove/, 'post', formDesignController_1.default.remove);
mockjs_1.default.mock(/\/admin\/form\/publish/, 'post', formDesignController_1.default.publish);
mockjs_1.default.mock(/\/admin\/form\/modify/, 'post', formDesignController_1.default.modify);
mockjs_1.default.mock(/\/admin\/form\/list/, 'get', formDesignController_1.default.list);
mockjs_1.default.mock(/\/admin\/form\/getInfo/, 'get', formDesignController_1.default.getInfo);
mockjs_1.default.mock(/\/admin\/form\/get/, 'get', formDesignController_1.default.get);
mockjs_1.default.mock(/\/admin\/form\/create/, 'post', formDesignController_1.default.create);
mockjs_1.default.mock(/\/admin\/form\/template\/update/, 'post', formTemplateController_1.default.update);
mockjs_1.default.mock(/\/admin\/form\/template\/getByCode/, 'get', formTemplateController_1.default.getByCode);
mockjs_1.default.mock(/\/admin\/form\/template\/findBySchemaCode/, 'get', formTemplateController_1.default.findBySchemaCode);
mockjs_1.default.mock(/\/admin\/form\/template\/delete/, 'get', formTemplateController_1.default.delete);
mockjs_1.default.mock(/\/admin\/form\/template\/create/, 'post', formTemplateController_1.default.create);
mockjs_1.default.mock(/\/admin\/license\/serverInfo/, 'get', licenseController_1.default.serverInfo);
mockjs_1.default.mock(/\/admin\/license\/info/, 'get', licenseController_1.default.info);
mockjs_1.default.mock(/\/admin\/model\/app\/visiblePerGroup/, 'post', appPackageController_1.default.visiblePerGroup);
mockjs_1.default.mock(/\/admin\/model\/app\/visibleAll/, 'post', appPackageController_1.default.visibleAll);
mockjs_1.default.mock(/\/admin\/model\/app\/remove/, 'post', appPackageController_1.default.remove);
mockjs_1.default.mock(/\/admin\/model\/app\/modify/, 'post', appPackageController_1.default.modify);
mockjs_1.default.mock(/\/admin\/model\/app\/listOwn/, 'get', appPackageController_1.default.listOwn);
mockjs_1.default.mock(/\/admin\/model\/app\/listGroupBy/, 'post', appPackageController_1.default.listGroupBy);
mockjs_1.default.mock(/\/admin\/model\/app\/listEnable/, 'post', appPackageController_1.default.listEnable);
mockjs_1.default.mock(/\/admin\/model\/app\/list/, 'post', appPackageController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/app\/groupUpdate/, 'post', appPackageController_1.default.groupUpdate);
mockjs_1.default.mock(/\/admin\/model\/app\/groupRemove/, 'post', appPackageController_1.default.groupRemove);
mockjs_1.default.mock(/\/admin\/model\/app\/groupList/, 'post', appPackageController_1.default.groupList);
mockjs_1.default.mock(/\/admin\/model\/app\/groupAdd/, 'post', appPackageController_1.default.groupAdd);
mockjs_1.default.mock(/\/admin\/model\/app\/getByCode/, 'get', appPackageController_1.default.getByCode);
mockjs_1.default.mock(/\/admin\/model\/app\/get/, 'get', appPackageController_1.default.get);
mockjs_1.default.mock(/\/admin\/model\/app\/enable/, 'post', appPackageController_1.default.enable);
mockjs_1.default.mock(/\/admin\/model\/app\/disable/, 'post', appPackageController_1.default.disable);
mockjs_1.default.mock(/\/admin\/model\/app\/create/, 'post', appPackageController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/updateGroup/, 'post', appPermissionController_1.default.updateGroup);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/sort/, 'post', appPermissionController_1.default.sort);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/saveSchemaPermissions/, 'post', appPermissionController_1.default.saveSchemaPermissions);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/resource/, 'get', appPermissionController_1.default.resource);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/rename/, 'post', appPermissionController_1.default.rename);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/removeGroups/, 'post', appPermissionController_1.default.removeGroups);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/propertyResource/, 'get', appPermissionController_1.default.propertyResource);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/listSchemaPermission/, 'get', appPermissionController_1.default.listSchemaPermission);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/listGroups/, 'get', appPermissionController_1.default.listGroups);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/getSchemaPermission/, 'get', appPermissionController_1.default.getSchemaPermission);
mockjs_1.default.mock(/\/admin\/model\/app\/permission\/createGroup/, 'post', appPermissionController_1.default.createGroup);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/update/, 'post', bizRuleController_1.default.update);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/rename/, 'post', bizRuleController_1.default.rename);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/queryBySchemaCode/, 'get', bizRuleController_1.default.queryBySchemaCode);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/property\/list/, 'post', bizRuleController_1.default.list_1);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/list/, 'post', bizRuleController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/property\/get/, 'get', bizRuleController_1.default.get_1);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/get/, 'get', bizRuleController_1.default.get);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/delete/, 'post', bizRuleController_1.default.delete);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/create/, 'post', bizRuleController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/biz\/rule\/clone/, 'post', bizRuleController_1.default.clone);
mockjs_1.default.mock(/\/admin\/model\/fun\/tree/, 'get', modelFunTreeController_1.default.tree);
mockjs_1.default.mock(/\/admin\/model\/fun\/sort/, 'post', modelFunTreeController_1.default.sort);
mockjs_1.default.mock(/\/admin\/model\/fun\/rename/, 'post', modelFunTreeController_1.default.rename);
mockjs_1.default.mock(/\/admin\/model\/menu\/remove/, 'post', bizMenuController_1.default.remove);
mockjs_1.default.mock(/\/admin\/model\/menu\/modify/, 'post', bizMenuController_1.default.modify);
mockjs_1.default.mock(/\/admin\/model\/menu\/get/, 'get', bizMenuController_1.default.get);
mockjs_1.default.mock(/\/admin\/model\/menu\/create/, 'post', bizMenuController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/schema\/test/, 'post', bizSchemaController_1.default.test);
mockjs_1.default.mock(/\/admin\/model\/schema\/sort/, 'post', bizSchemaController_1.default.sort);
mockjs_1.default.mock(/\/admin\/model\/schema\/saveTitle/, 'post', bizSchemaController_1.default.saveTitle);
mockjs_1.default.mock(/\/admin\/model\/schema\/removeSchema/, 'post', bizSchemaController_1.default.removeSchema);
mockjs_1.default.mock(/\/admin\/model\/schema\/removeGroup/, 'post', bizSchemaController_1.default.removeGroup);
mockjs_1.default.mock(/\/admin\/model\/schema\/publish/, 'post', bizSchemaController_1.default.publish);
mockjs_1.default.mock(/\/admin\/model\/schema\/modifySchema/, 'post', bizSchemaController_1.default.modifySchema);
mockjs_1.default.mock(/\/admin\/model\/schema\/modifyGroup/, 'post', bizSchemaController_1.default.modifyGroup);
mockjs_1.default.mock(/\/admin\/model\/schema\/groupSort/, 'post', bizSchemaController_1.default.groupSort);
mockjs_1.default.mock(/\/admin\/model\/schema\/getSchemaMetadata/, 'get', bizSchemaController_1.default.getSchemaMetadata);
mockjs_1.default.mock(/\/admin\/model\/schema\/getSchemaInfo/, 'get', bizSchemaController_1.default.getSchemaInfo);
mockjs_1.default.mock(/\/admin\/model\/schema\/getModelTree/, 'get', bizSchemaController_1.default.getModelTree);
mockjs_1.default.mock(/\/admin\/model\/schema\/getModelList/, 'get', bizSchemaController_1.default.getModelList);
mockjs_1.default.mock(/\/admin\/model\/schema\/getGroupTree/, 'get', bizSchemaController_1.default.getGroupTree);
mockjs_1.default.mock(/\/admin\/model\/schema\/getCorrlationFormSchema/, 'get', bizSchemaController_1.default.getCorrlationFormSchema);
mockjs_1.default.mock(/\/admin\/model\/schema\/createSchema/, 'post', bizSchemaController_1.default.createSchema);
mockjs_1.default.mock(/\/admin\/model\/schema\/createGroup/, 'post', bizSchemaController_1.default.createGroup);
mockjs_1.default.mock(/\/admin\/model\/schema\/event\/update/, 'post', bizSchemaEventController_1.default.update);
mockjs_1.default.mock(/\/admin\/model\/schema\/event\/queryBySchemaCode/, 'get', bizSchemaEventController_1.default.queryBySchemaCode);
mockjs_1.default.mock(/\/admin\/model\/schema\/event\/list/, 'post', bizSchemaEventController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/schema\/event\/get/, 'get', bizSchemaEventController_1.default.get);
mockjs_1.default.mock(/\/admin\/model\/schema\/event\/delete/, 'get', bizSchemaEventController_1.default.delete);
mockjs_1.default.mock(/\/admin\/model\/schema\/event\/create/, 'post', bizSchemaEventController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/schema\/formula\/update/, 'post', bizPropertyFormulaController_1.default.update);
mockjs_1.default.mock(/\/admin\/model\/schema\/formula\/remove/, 'post', bizPropertyFormulaController_1.default.remove);
mockjs_1.default.mock(/\/admin\/model\/schema\/formula\/list/, 'get', bizPropertyFormulaController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/schema\/formula\/create/, 'post', bizPropertyFormulaController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/sort/, 'post', bizPropertyController_1.default.sort);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/remove/, 'post', bizPropertyController_1.default.remove);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/modify/, 'post', bizPropertyController_1.default.modify);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/list/, 'get', bizPropertyController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/getPublishListByWorkflowCode/, 'get', bizPropertyController_1.default.getPublishListByWorkflowCode);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/getPublishList/, 'get', bizPropertyController_1.default.getPublishList);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/get/, 'post', bizPropertyController_1.default.get);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/create/, 'post', bizPropertyController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/confirmRemove/, 'post', bizPropertyController_1.default.confirmRemove);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/batchListPublishByWorkflowCodes/, 'post', bizPropertyController_1.default.batchListPublishByWorkflowCodes);
mockjs_1.default.mock(/\/admin\/model\/schema\/property\/batchListPublish/, 'post', bizPropertyController_1.default.batchListPublish);
mockjs_1.default.mock(/\/admin\/model\/view\/updateVisible/, 'post', bizViewController_1.default.updateVisible);
mockjs_1.default.mock(/\/admin\/model\/view\/update/, 'post', bizViewController_1.default.update);
mockjs_1.default.mock(/\/admin\/model\/view\/sort/, 'post', bizViewController_1.default.sort);
mockjs_1.default.mock(/\/admin\/model\/view\/remove/, 'post', bizViewController_1.default.remove);
mockjs_1.default.mock(/\/admin\/model\/view\/publish/, 'post', bizViewController_1.default.publish);
mockjs_1.default.mock(/\/admin\/model\/view\/list/, 'get', bizViewController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/view\/getViewInfo/, 'post', bizViewController_1.default.getViewInfo);
mockjs_1.default.mock(/\/admin\/model\/view\/create/, 'post', bizViewController_1.default.create);
mockjs_1.default.mock(/\/admin\/model\/workflow\/validateWorkflowTemplate/, 'post', workflowDesignController_1.default.validateWorkflowTemplate);
mockjs_1.default.mock(/\/admin\/model\/workflow\/validateParticipantExpr/, 'get', workflowDesignController_1.default.validateParticipantExpr);
mockjs_1.default.mock(/\/admin\/model\/workflow\/updateWorkflowHeader/, 'post', workflowDesignController_1.default.updateWorkflowHeader);
mockjs_1.default.mock(/\/admin\/model\/workflow\/saveWorkflowTemplate/, 'post', workflowDesignController_1.default.saveWorkflowTemplate);
mockjs_1.default.mock(/\/admin\/model\/workflow\/remove/, 'post', workflowDesignController_1.default.remove);
mockjs_1.default.mock(/\/admin\/model\/workflow\/publishWorkflowTemplate/, 'post', workflowDesignController_1.default.publishWorkflowTemplate);
mockjs_1.default.mock(/\/admin\/model\/workflow\/list/, 'get', workflowDesignController_1.default.list);
mockjs_1.default.mock(/\/admin\/model\/workflow\/getWorkflowTemplate/, 'post', workflowDesignController_1.default.getWorkflowTemplate);
mockjs_1.default.mock(/\/admin\/model\/workflow\/getWorkflowDraft/, 'post', workflowDesignController_1.default.getWorkflowDraft);
mockjs_1.default.mock(/\/admin\/model\/workflow\/getHistoricPublishedList/, 'post', workflowDesignController_1.default.getHistoricPublishedList);
mockjs_1.default.mock(/\/admin\/model\/workflow\/get/, 'get', workflowDesignController_1.default.get);
mockjs_1.default.mock(/\/admin\/model\/workflow\/createWorkflow/, 'post', workflowDesignController_1.default.createWorkflow);
mockjs_1.default.mock(/\/admin\/model\/workflow\/clone/, 'post', workflowDesignController_1.default.clone);
mockjs_1.default.mock(/\/admin\/org\/config\/syncOrgs/, 'post', organizationController_1.default.syncOrgs);
mockjs_1.default.mock(/\/admin\/org\/config\/save/, 'post', organizationController_1.default.save);
mockjs_1.default.mock(/\/admin\/org\/config\/remove/, 'post', organizationController_1.default.remove);
mockjs_1.default.mock(/\/admin\/org\/config\/query\/record/, 'post', organizationController_1.default.record);
mockjs_1.default.mock(/\/admin\/org\/config\/getList/, 'get', organizationController_1.default.getList);
mockjs_1.default.mock(/\/admin\/org\/config\/get/, 'get', organizationController_1.default.get);
mockjs_1.default.mock(/\/admin\/org\/config\/genSyncResult/, 'get', organizationController_1.default.genSyncResult);
mockjs_1.default.mock(/\/admin\/org\/dept\/search/, 'get', departmentController_1.default.search);
mockjs_1.default.mock(/\/admin\/org\/dept\/save/, 'post', departmentController_1.default.save);
mockjs_1.default.mock(/\/admin\/org\/dept\/removeUser/, 'post', departmentController_1.default.removeUser);
mockjs_1.default.mock(/\/admin\/org\/dept\/remove/, 'post', departmentController_1.default.remove);
mockjs_1.default.mock(/\/admin\/org\/dept\/listChildUnit/, 'get', departmentController_1.default.listChildUnit);
mockjs_1.default.mock(/\/admin\/org\/dept\/getDeptUserListByPage/, 'get', departmentController_1.default.getDeptUserListByPage);
mockjs_1.default.mock(/\/admin\/org\/dept\/getDeptUserList/, 'get', departmentController_1.default.getDeptUserList);
mockjs_1.default.mock(/\/admin\/org\/dept\/getChildList/, 'post', departmentController_1.default.getChildList);
mockjs_1.default.mock(/\/admin\/org\/dept\/getAllDeptTree/, 'get', departmentController_1.default.getAllDeptTree);
mockjs_1.default.mock(/\/admin\/org\/dept\/get/, 'get', departmentController_1.default.get);
mockjs_1.default.mock(/\/admin\/org\/dept\/batchSaveDept/, 'post', departmentController_1.default.batchSaveDept);
mockjs_1.default.mock(/\/admin\/org\/tag\/updateTag/, 'post', tagController_1.default.updateTag);
mockjs_1.default.mock(/\/admin\/org\/tag\/searchTagGroup/, 'get', tagController_1.default.searchTagGroup);
mockjs_1.default.mock(/\/admin\/org\/tag\/saveUserToTag/, 'post', tagController_1.default.saveUserToTag);
mockjs_1.default.mock(/\/admin\/org\/tag\/saveGroup/, 'post', tagController_1.default.saveGroup);
mockjs_1.default.mock(/\/admin\/org\/tag\/removeUnits/, 'post', tagController_1.default.removeUnits);
mockjs_1.default.mock(/\/admin\/org\/tag\/removeTag/, 'post', tagController_1.default.removeTag);
mockjs_1.default.mock(/\/admin\/org\/tag\/removeGroup/, 'post', tagController_1.default.removeGroup);
mockjs_1.default.mock(/\/admin\/org\/tag\/getUserListByPage/, 'get', tagController_1.default.getUserListByPage);
mockjs_1.default.mock(/\/admin\/org\/tag\/getTagTreeWithoutOrg/, 'get', tagController_1.default.getTagTreeWithoutOrg);
mockjs_1.default.mock(/\/admin\/org\/tag\/batchSaveTag/, 'post', tagController_1.default.batchSaveTag);
mockjs_1.default.mock(/\/admin\/org\/unit\/tree\/search/, 'post', adminUnitTreeController_1.default.search);
mockjs_1.default.mock(/\/admin\/org\/unit\/tree\/getchildrenList/, 'post', adminUnitTreeController_1.default.getchildrenList);
mockjs_1.default.mock(/\/admin\/org\/user\/updateQuitRemark/, 'post', userController_1.default.updateQuitRemark);
mockjs_1.default.mock(/\/admin\/org\/user\/save/, 'post', userController_1.default.save);
mockjs_1.default.mock(/\/admin\/org\/user\/restore/, 'post', userController_1.default.restore);
mockjs_1.default.mock(/\/admin\/org\/user\/resetPwd/, 'post', userController_1.default.resetPwd);
mockjs_1.default.mock(/\/admin\/org\/user\/listQuitUsers/, 'get', userController_1.default.listQuitUsers);
mockjs_1.default.mock(/\/admin\/org\/user\/get/, 'get', userController_1.default.get);
mockjs_1.default.mock(/\/admin\/org\/user\/disable/, 'post', userController_1.default.disable);
mockjs_1.default.mock(/\/admin\/org\/user\/delete/, 'post', userController_1.default.delete);
mockjs_1.default.mock(/\/admin\/org\/user\/batchSave/, 'post', userController_1.default.batchSave);
mockjs_1.default.mock(/\/admin\/org\/user\/batchMoveUserDept/, 'post', userController_1.default.batchMoveUserDept);
mockjs_1.default.mock(/\/admin\/org\/user\/biz\/transfer/, 'post', userBizController_1.default.transfer);
mockjs_1.default.mock(/\/admin\/org\/user\/biz\/searchUserWorkItems/, 'post', userBizController_1.default.searchUserWorkItems);
mockjs_1.default.mock(/\/admin\/org\/user\/biz\/genResult/, 'get', userBizController_1.default.genResult);
mockjs_1.default.mock(/\/admin\/permission\/admin\/removeSysAdmin/, 'post', adminController_1.default.removeSysAdmin);
mockjs_1.default.mock(/\/admin\/permission\/admin\/getSysAdminsByPage/, 'get', adminController_1.default.getSysAdminsByPage);
mockjs_1.default.mock(/\/admin\/permission\/admin\/addSysAdmin/, 'post', adminController_1.default.addSysAdmin);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/updateAdminRole/, 'post', adminRoleController_1.default.updateAdminRole);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/grantPermissions/, 'post', adminRoleController_1.default.grantPermissions);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/getRoleInfo/, 'get', adminRoleController_1.default.getRoleInfo);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/getPermissionRange/, 'get', adminRoleController_1.default.getPermissionRange);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/deleteAdminRole/, 'post', adminRoleController_1.default.deleteAdminRole);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/createAdminRole/, 'post', adminRoleController_1.default.createAdminRole);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/chartTree/, 'get', adminRoleController_1.default.chartTree);
mockjs_1.default.mock(/\/admin\/permission\/adminRole\/batchGrantPermissions/, 'post', adminRoleController_1.default.batchGrantPermissions);
mockjs_1.default.mock(/\/admin\/report\/advanced\/ds\/update/, 'post', advancedDataSourceController_1.default.update);
mockjs_1.default.mock(/\/admin\/report\/advanced\/ds\/testRun/, 'post', advancedDataSourceController_1.default.testRun);
mockjs_1.default.mock(/\/admin\/report\/advanced\/ds\/list/, 'get', advancedDataSourceController_1.default.list);
mockjs_1.default.mock(/\/admin\/report\/advanced\/ds\/get/, 'get', advancedDataSourceController_1.default.get);
mockjs_1.default.mock(/\/admin\/report\/advanced\/ds\/delete/, 'post', advancedDataSourceController_1.default.delete);
mockjs_1.default.mock(/\/admin\/report\/advanced\/ds\/create/, 'post', advancedDataSourceController_1.default.create);
mockjs_1.default.mock(/\/admin\/report\/chart\/test/, 'post', chartController_1.default.test);
mockjs_1.default.mock(/\/admin\/report\/chart\/modify/, 'post', chartController_1.default.modify);
mockjs_1.default.mock(/\/admin\/report\/chart\/create/, 'post', chartController_1.default.create);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/saveGlobal/, 'post', dashboardController_1.default.saveGlobal);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/saveFilters/, 'post', dashboardController_1.default.saveFilters);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/publish/, 'post', dashboardController_1.default.publish);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/moveChart/, 'post', dashboardController_1.default.moveChart);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/modify/, 'post', dashboardController_1.default.modify);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/get/, 'get', dashboardController_1.default.get);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/delete/, 'post', dashboardController_1.default.delete);
mockjs_1.default.mock(/\/admin\/report\/dashboard\/create/, 'post', dashboardController_1.default.create);
mockjs_1.default.mock(/\/admin\/report\/ds\/propertys/, 'post', reportDataSourceController_1.default.propertys);
mockjs_1.default.mock(/\/admin\/report\/ds\/list/, 'get', reportDataSourceController_1.default.list);
mockjs_1.default.mock(/\/admin\/report\/olap\/query/, 'post', olapController_1.default.query);
mockjs_1.default.mock(/\/admin\/scheduler\/update/, 'post', schedulerController_1.default.update);
mockjs_1.default.mock(/\/admin\/scheduler\/trigger/, 'post', schedulerController_1.default.trigger);
mockjs_1.default.mock(/\/admin\/scheduler\/stop/, 'post', schedulerController_1.default.stop);
mockjs_1.default.mock(/\/admin\/scheduler\/start/, 'post', schedulerController_1.default.start);
mockjs_1.default.mock(/\/admin\/scheduler\/remove/, 'post', schedulerController_1.default.remove);
mockjs_1.default.mock(/\/admin\/scheduler\/nextTriggerTime/, 'post', schedulerController_1.default.nextTriggerTime);
mockjs_1.default.mock(/\/admin\/scheduler\/list/, 'post', schedulerController_1.default.list);
mockjs_1.default.mock(/\/admin\/scheduler\/getInfo/, 'get', schedulerController_1.default.getInfo);
mockjs_1.default.mock(/\/admin\/scheduler\/add/, 'post', schedulerController_1.default.add);
mockjs_1.default.mock(/\/admin\/system\/dict\/update/, 'post', sysDictController_1.default.update);
mockjs_1.default.mock(/\/admin\/system\/dict\/page/, 'post', sysDictController_1.default.page);
mockjs_1.default.mock(/\/admin\/system\/dict\/config\/listByDictId/, 'get', sysDictController_1.default.listByDictId);
mockjs_1.default.mock(/\/admin\/system\/dict\/get/, 'get', sysDictController_1.default.get);
mockjs_1.default.mock(/\/admin\/system\/dict\/changeStatus/, 'get', sysDictController_1.default.changeStatus);
mockjs_1.default.mock(/\/admin\/system\/dict\/add/, 'post', sysDictController_1.default.add);
mockjs_1.default.mock(/\/admin\/system\/log\/list/, 'post', sysLogController_1.default.list);
mockjs_1.default.mock(/\/admin\/system\/log\/info/, 'get', sysLogController_1.default.info);
mockjs_1.default.mock(/\/admin\/system\/params\/sms\/template\/create/, 'get', sysParamsController_1.default.create);
mockjs_1.default.mock(/\/admin\/system\/security\/update/, 'post', securityClientController_1.default.update);
mockjs_1.default.mock(/\/admin\/system\/security\/resetSecret/, 'post', securityClientController_1.default.resetSecret);
mockjs_1.default.mock(/\/admin\/system\/security\/remove/, 'post', securityClientController_1.default.remove);
mockjs_1.default.mock(/\/admin\/system\/security\/list/, 'get', securityClientController_1.default.list);
mockjs_1.default.mock(/\/admin\/system\/security\/create/, 'post', securityClientController_1.default.create);
mockjs_1.default.mock(/\/auth\/ssoLogin/, 'get', loginController_1.default.ssoLogin);
mockjs_1.default.mock(/\/auth\/logout/, 'delete', loginController_1.default.logout);
mockjs_1.default.mock(/\/auth\/login/, 'post', loginController_1.default.login);
mockjs_1.default.mock(/\/auth\/getOrgList/, 'get', loginController_1.default.getOrgList);
mockjs_1.default.mock(/\/auth\/genRsaKey/, 'get', loginController_1.default.genRsaKey);
mockjs_1.default.mock(/\/document\/file\/upload/, 'post', documentFileController_1.default.upload_1);
mockjs_1.default.mock(/\/document\/file\/uploadTemp/, 'post', documentFileController_1.default.uploadTemp);
mockjs_1.default.mock(/\/document\/file\/open\/upload/, 'post', documentFileController_1.default.upload);
mockjs_1.default.mock(/\/document\/file\/viewtmp\/{documentId}/, 'get', documentFileController_1.default.documentId_2);
mockjs_1.default.mock(/\/document\/file\/view\/{documentId}/, 'get', documentFileController_1.default.documentId_1);
mockjs_1.default.mock(/\/document\/file\/thumb\/{documentId}/, 'get', documentFileController_1.default.documentId);
mockjs_1.default.mock(/\/document\/file\/deleteTemp/, 'post', documentFileController_1.default.deleteTemp);
mockjs_1.default.mock(/\/document\/file\/delete/, 'post', documentFileController_1.default.delete);
mockjs_1.default.mock(/\/excel\/import/, 'post', excelController_1.default.import);
mockjs_1.default.mock(/\/excel\/getImportProgress/, 'get', excelController_1.default.getImportProgress);
mockjs_1.default.mock(/\/excel\/getExportProgress/, 'get', excelController_1.default.getExportProgress);
mockjs_1.default.mock(/\/excel\/excelExport/, 'post', excelController_1.default.excelExport);
mockjs_1.default.mock(/\/excel\/downloadTemplate/, 'post', excelController_1.default.downloadTemplate);
mockjs_1.default.mock(/\/oauth\/token/, 'patch', authController_1.default.token_6);
mockjs_1.default.mock(/\/oauth\/token/, 'options', authController_1.default.token_5);
mockjs_1.default.mock(/\/oauth\/token/, 'delete', authController_1.default.token_4);
mockjs_1.default.mock(/\/oauth\/token/, 'put', authController_1.default.token_3);
mockjs_1.default.mock(/\/oauth\/token/, 'post', authController_1.default.token_2);
mockjs_1.default.mock(/\/oauth\/token/, 'head', authController_1.default.token_1);
mockjs_1.default.mock(/\/oauth\/token/, 'get', authController_1.default.token);
mockjs_1.default.mock(/\/openapi\/organization\/user\/getByCode/, 'get', organizationOpenApi_1.default.getByCode);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/update/, 'post', formRuntimeOpenApi_1.default.update);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/remove/, 'post', formRuntimeOpenApi_1.default.remove);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/loadWorkflowData/, 'post', formRuntimeOpenApi_1.default.loadWorkflowData);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/loadBizData/, 'post', formRuntimeOpenApi_1.default.loadBizData);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/listData/, 'post', formRuntimeOpenApi_1.default.listData);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/insert/, 'post', formRuntimeOpenApi_1.default.insert);
mockjs_1.default.mock(/\/openapi\/runtime\/form\/calculate/, 'post', formRuntimeOpenApi_1.default.calculate);
mockjs_1.default.mock(/\/openapi\/runtime\/instance\/startWorkflow/, 'post', instanceRuntimeOpenApi_1.default.startWorkflow);
mockjs_1.default.mock(/\/openapi\/runtime\/instance\/logs/, 'get', instanceRuntimeOpenApi_1.default.logs);
mockjs_1.default.mock(/\/openapi\/runtime\/instance\/getInfoByInstanceId/, 'get', instanceRuntimeOpenApi_1.default.getInfoByInstanceId);
mockjs_1.default.mock(/\/openapi\/runtime\/instance\/deleteWorkflowInstance/, 'get', instanceRuntimeOpenApi_1.default.deleteWorkflowInstance);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/searchUserWorkItems/, 'post', workflowRuntimeOpenApi_1.default.searchUserWorkItems);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/searchUserFinishedWorkItems/, 'post', workflowRuntimeOpenApi_1.default.searchUserFinishedWorkItems);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/predictParticipant/, 'post', workflowRuntimeOpenApi_1.default.predictParticipant);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/listWrokflow/, 'get', workflowRuntimeOpenApi_1.default.listWrokflow);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/listInstances/, 'post', workflowRuntimeOpenApi_1.default.listInstances);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/getWorkItemsByInstanceId/, 'get', workflowRuntimeOpenApi_1.default.getWorkItemsByInstanceId);
mockjs_1.default.mock(/\/openapi\/runtime\/workflow\/getWorkItemApprovalsByInstanceId/, 'get', workflowRuntimeOpenApi_1.default.getWorkItemApprovalsByInstanceId);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/transfer/, 'post', workItemRuntimeOpenApi_1.default.transfer);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/submit/, 'post', workItemRuntimeOpenApi_1.default.submit);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/retrieve/, 'post', workItemRuntimeOpenApi_1.default.retrieve);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/reject/, 'post', workItemRuntimeOpenApi_1.default.reject);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/invalid/, 'post', workItemRuntimeOpenApi_1.default.invalid);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/disagree/, 'post', workItemRuntimeOpenApi_1.default.disagree);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/close/, 'post', workItemRuntimeOpenApi_1.default.close);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/circulate/, 'post', workItemRuntimeOpenApi_1.default.circulate);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/assistSubmit/, 'post', workItemRuntimeOpenApi_1.default.assistSubmit);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/assist/, 'post', workItemRuntimeOpenApi_1.default.assist);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/apposttile/, 'post', workItemRuntimeOpenApi_1.default.apposttile);
mockjs_1.default.mock(/\/openapi\/runtime\/workitem\/agree/, 'post', workItemRuntimeOpenApi_1.default.agree);
mockjs_1.default.mock(/\/portal\/app\/searchSchemas/, 'get', appController_1.default.searchSchemas);
mockjs_1.default.mock(/\/portal\/app\/listGroupBy/, 'post', appController_1.default.listGroupBy);
mockjs_1.default.mock(/\/portal\/app\/list/, 'post', appController_1.default.list);
mockjs_1.default.mock(/\/portal\/app\/info/, 'get', appController_1.default.info);
mockjs_1.default.mock(/\/portal\/app\/getSchemaInfo/, 'get', appController_1.default.getSchemaInfo);
mockjs_1.default.mock(/\/portal\/app\/getMenuInfo/, 'get', appController_1.default.getMenuInfo);
mockjs_1.default.mock(/\/portal\/app\/getDashboardInfo/, 'get', appController_1.default.getDashboardInfo);
mockjs_1.default.mock(/\/portal\/bizObject\/update/, 'post', bizObjectController_1.default.update);
mockjs_1.default.mock(/\/portal\/bizObject\/uniqueValidate/, 'post', bizObjectController_1.default.uniqueValidate);
mockjs_1.default.mock(/\/portal\/bizObject\/temporary/, 'post', bizObjectController_1.default.temporary);
mockjs_1.default.mock(/\/portal\/bizObject\/remove/, 'post', bizObjectController_1.default.remove);
mockjs_1.default.mock(/\/portal\/bizObject\/listTemplateData/, 'post', bizObjectController_1.default.listTemplateData);
mockjs_1.default.mock(/\/portal\/bizObject\/listSheetDatas/, 'get', bizObjectController_1.default.listSheetDatas);
mockjs_1.default.mock(/\/portal\/bizObject\/listProperty/, 'get', bizObjectController_1.default.listProperty);
mockjs_1.default.mock(/\/portal\/bizObject\/insert/, 'post', bizObjectController_1.default.insert);
mockjs_1.default.mock(/\/portal\/bizObject\/getList/, 'post', bizObjectController_1.default.getList);
mockjs_1.default.mock(/\/portal\/bizObject\/batchUpdate/, 'post', bizObjectController_1.default.batchUpdate);
mockjs_1.default.mock(/\/portal\/bizObject\/batchListSheetDatas/, 'post', bizObjectController_1.default.batchListSheetDatas);
mockjs_1.default.mock(/\/portal\/form\/comment\/queryAtUser/, 'get', formCommentController_1.default.queryAtUser);
mockjs_1.default.mock(/\/portal\/form\/comment\/findByBizObjectId/, 'get', formCommentController_1.default.findByBizObjectId);
mockjs_1.default.mock(/\/portal\/form\/comment\/delete/, 'get', formCommentController_1.default.delete);
mockjs_1.default.mock(/\/portal\/form\/comment\/create/, 'post', formCommentController_1.default.create);
mockjs_1.default.mock(/\/portal\/form\/template\/getByCode/, 'get', portalFormTemplateController_1.default.getByCode);
mockjs_1.default.mock(/\/portal\/form\/template\/findBySchemaCode/, 'get', portalFormTemplateController_1.default.findBySchemaCode);
mockjs_1.default.mock(/\/portal\/js\/sign\/wechat/, 'post', jsSignController_1.default.wechat);
mockjs_1.default.mock(/\/portal\/message\/readAll/, 'post', messageController_1.default.readAll);
mockjs_1.default.mock(/\/portal\/message\/read/, 'post', messageController_1.default.read);
mockjs_1.default.mock(/\/portal\/message\/listUnreadLimit/, 'get', messageController_1.default.listUnreadLimit);
mockjs_1.default.mock(/\/portal\/message\/list/, 'get', messageController_1.default.list);
mockjs_1.default.mock(/\/portal\/message\/cleadAllRead/, 'post', messageController_1.default.cleadAllRead);
mockjs_1.default.mock(/\/portal\/model\/fun\/tree/, 'get', portalModelFunTreeController_1.default.tree);
mockjs_1.default.mock(/\/portal\/report\/olap\/query/, 'post', olapRuntimeController_1.default.query);
mockjs_1.default.mock(/\/portal\/runtime\/external\/submit/, 'post', externalController_1.default.submit);
mockjs_1.default.mock(/\/portal\/runtime\/external\/startWorkflow/, 'post', externalController_1.default.startWorkflow);
mockjs_1.default.mock(/\/portal\/runtime\/external\/load/, 'get', externalController_1.default.load);
mockjs_1.default.mock(/\/portal\/runtime\/form\/viewCorrelationForm/, 'get', formRuntimeController_1.default.viewCorrelationForm);
mockjs_1.default.mock(/\/portal\/runtime\/form\/remind/, 'post', formRuntimeController_1.default.remind);
mockjs_1.default.mock(/\/portal\/runtime\/form\/loadWorkflowData/, 'post', formRuntimeController_1.default.loadWorkflowData);
mockjs_1.default.mock(/\/portal\/runtime\/form\/loadSheetDatas/, 'post', formRuntimeController_1.default.loadSheetDatas);
mockjs_1.default.mock(/\/portal\/runtime\/form\/loadDataByCommentId/, 'get', formRuntimeController_1.default.loadDataByCommentId);
mockjs_1.default.mock(/\/portal\/runtime\/form\/loadBizData/, 'post', formRuntimeController_1.default.loadBizData);
mockjs_1.default.mock(/\/portal\/runtime\/form\/calculate/, 'post', formRuntimeController_1.default.calculate);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/urge/, 'post', instanceRuntimeController_1.default.urge);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/tracks/, 'get', instanceRuntimeController_1.default.tracks);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/temporary/, 'post', instanceRuntimeController_1.default.temporary);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superInvalid/, 'post', instanceRuntimeController_1.default.superInvalid);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superDeleteInstance/, 'post', instanceRuntimeController_1.default.superDeleteInstance);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superClose/, 'post', instanceRuntimeController_1.default.superClose);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superChangeOwner/, 'post', instanceRuntimeController_1.default.superChangeOwner);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superCancelNode/, 'post', instanceRuntimeController_1.default.superCancelNode);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superAdjustNodeParticipant/, 'post', instanceRuntimeController_1.default.superAdjustNodeParticipant);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/superActivateNode/, 'post', instanceRuntimeController_1.default.superActivateNode);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/startWorkflow/, 'post', instanceRuntimeController_1.default.startWorkflow);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/logs/, 'get', instanceRuntimeController_1.default.logs);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/getOriginatorDepartments/, 'get', instanceRuntimeController_1.default.getOriginatorDepartments);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/temporary\/delete/, 'post', instanceRuntimeController_1.default.delete_1);
mockjs_1.default.mock(/\/portal\/runtime\/instance\/delete/, 'post', instanceRuntimeController_1.default.delete);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchWorkItems/, 'post', workflowRuntimeController_1.default.searchWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchMyInstances/, 'post', workflowRuntimeController_1.default.searchMyInstances);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchHistoricWorkItems/, 'post', workflowRuntimeController_1.default.searchHistoricWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchHistoricCirculateWorkItems/, 'post', workflowRuntimeController_1.default.searchHistoricCirculateWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchCirculateWorkItems/, 'post', workflowRuntimeController_1.default.searchCirculateWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchBatchWorkItems/, 'post', workflowRuntimeController_1.default.searchBatchWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchAllWorkItems/, 'post', workflowRuntimeController_1.default.searchAllWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/searchAllHistoricWorkItems/, 'post', workflowRuntimeController_1.default.searchAllHistoricWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/listWrokflow/, 'get', workflowRuntimeController_1.default.listWrokflow);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/listWorkItems/, 'post', workflowRuntimeController_1.default.listWorkItems);
mockjs_1.default.mock(/\/portal\/runtime\/workflow\/listInstances/, 'post', workflowRuntimeController_1.default.listInstances);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/transfer/, 'post', workItemRuntimeController_1.default.transfer);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/temporary/, 'post', workItemRuntimeController_1.default.temporary);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/submit/, 'post', workItemRuntimeController_1.default.submit);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/retrieve/, 'post', workItemRuntimeController_1.default.retrieve);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/reject/, 'post', workItemRuntimeController_1.default.reject);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/predictParticipant/, 'post', workItemRuntimeController_1.default.predictParticipant);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/invalid/, 'post', workItemRuntimeController_1.default.invalid);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/disagree/, 'post', workItemRuntimeController_1.default.disagree);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/close/, 'post', workItemRuntimeController_1.default.close);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/circulate/, 'post', workItemRuntimeController_1.default.circulate);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/batchAgree/, 'post', workItemRuntimeController_1.default.batchAgree);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/assistSubmit/, 'post', workItemRuntimeController_1.default.assistSubmit);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/assist/, 'post', workItemRuntimeController_1.default.assist);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/apposttile/, 'post', workItemRuntimeController_1.default.apposttile);
mockjs_1.default.mock(/\/portal\/runtime\/workitem\/agree/, 'post', workItemRuntimeController_1.default.agree);
mockjs_1.default.mock(/\/portal\/server\/invoke\/bizRule/, 'post', bizServerInvokeController_1.default.bizRule);
mockjs_1.default.mock(/\/portal\/server\/invoke\/bizBus/, 'post', bizServerInvokeController_1.default.bizBus);
mockjs_1.default.mock(/\/portal\/system\/dict\/config\/listByDictId/, 'get', portalSysDictController_1.default.listByDictId);
mockjs_1.default.mock(/\/portal\/unit\/updatePwd/, 'post', portalUnitController_1.default.updatePwd);
mockjs_1.default.mock(/\/portal\/unit\/updateAvatar/, 'post', portalUnitController_1.default.updateAvatar);
mockjs_1.default.mock(/\/portal\/unit\/getUserMappingInfo/, 'get', portalUnitController_1.default.getUserMappingInfo);
mockjs_1.default.mock(/\/portal\/unit\/getUserInfo/, 'get', portalUnitController_1.default.getUserInfo);
mockjs_1.default.mock(/\/portal\/unit\/getCurUserInfo/, 'get', portalUnitController_1.default.getCurUserInfo);
mockjs_1.default.mock(/\/portal\/unit\/belongToCheck/, 'post', portalUnitController_1.default.belongToCheck);
mockjs_1.default.mock(/\/portal\/unit\/tree\/user\/search/, 'post', portalUnitTreeController_1.default.search_1);
mockjs_1.default.mock(/\/portal\/unit\/tree\/search/, 'post', portalUnitTreeController_1.default.search);
mockjs_1.default.mock(/\/portal\/unit\/tree\/getchildrenList/, 'post', portalUnitTreeController_1.default.getchildrenList);
mockjs_1.default.mock(/\/portal\/user\/biz\/common\/list/, 'get', portalUserBizController_1.default.list);
mockjs_1.default.mock(/\/portal\/user\/biz\/common\/delete/, 'post', portalUserBizController_1.default.delete);
mockjs_1.default.mock(/\/portal\/user\/biz\/common\/create/, 'post', portalUserBizController_1.default.create);
mockjs_1.default.mock(/\/portal\/view\/listData/, 'post', appViewController_1.default.listData);
mockjs_1.default.mock(/\/portal\/view\/list/, 'get', appViewController_1.default.list);
mockjs_1.default.mock(/\/portal\/view\/getViewInfo/, 'post', appViewController_1.default.getViewInfo);
mockjs_1.default.mock(/\/portal\/workbench\/getFigure/, 'get', workbenchController_1.default.getFigure);
mockjs_1.default.mock(/\/portal\/workbench\/quicklink\/save/, 'post', quickLinkController_1.default.save);
mockjs_1.default.mock(/\/portal\/workbench\/quicklink\/list/, 'get', quickLinkController_1.default.list);
mockjs_1.default.mock(/\/portal\/workbench\/quicklink\/delete/, 'post', quickLinkController_1.default.delete);
mockjs_1.default.mock(/\/portal\/workbench\/quicklink\/add/, 'post', quickLinkController_1.default.add);
mockjs_1.default.mock(/\/portal\/workflow\/delegate\/update/, 'post', workflowDelegateController_1.default.update);
mockjs_1.default.mock(/\/portal\/workflow\/delegate\/list/, 'post', workflowDelegateController_1.default.list);
mockjs_1.default.mock(/\/portal\/workflow\/delegate\/delete/, 'post', workflowDelegateController_1.default.delete);
mockjs_1.default.mock(/\/portal\/workflow\/delegate\/create/, 'post', workflowDelegateController_1.default.create);
mockjs_1.default.mock(/\/system\/shortlink\/get/, 'post', shortLinkController_1.default.get);
mockjs_1.default.mock(/\/system\/shortlink\/batchGet/, 'post', shortLinkController_1.default.batchGet);
mockjs_1.default.mock(/\/system\/sys\/idGenerator\/generateIds/, 'get', idGeneratorController_1.default.generateIds);
mockjs_1.default.mock(/\/system\/sys\/security\/genRsaKey/, 'get', securityController_1.default.genRsaKey);
mockjs_1.default.mock(/\/third\/notify\/wechat/, 'post', notifyController_1.default.wechat_1);
mockjs_1.default.mock(/\/third\/notify\/wechat/, 'get', notifyController_1.default.wechat);
mockjs_1.default.mock(/\/third\/notify\/openapi/, 'post', notifyController_1.default.openapi);
mockjs_1.default.mock(/\/third\/notify\/dingtalk/, 'post', notifyController_1.default.dingtalk_1);
mockjs_1.default.mock(/\/third\/notify\/dingtalk/, 'get', notifyController_1.default.dingtalk);
//# sourceMappingURL=index.js.map